[{"authors":["admin"],"categories":null,"content":"Nelson Bighetti is a professor of artificial intelligence at the Stanford AI Lab. His research interests include distributed robotics, mobile computing and programmable matter. He leads the Robotic Neurobiology group, which develops self-reconfiguring robots, systems of self-organizing robots, and mobile sensor networks.\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed neque elit, tristique placerat feugiat ac, facilisis vitae arcu. Proin eget egestas augue. Praesent ut sem nec arcu pellentesque aliquet. Duis dapibus diam vel metus tempus vulputate.\n","date":1554595200,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1567641600,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/author/nelson-bighetti/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/nelson-bighetti/","section":"authors","summary":"Nelson Bighetti is a professor of artificial intelligence at the Stanford AI Lab. His research interests include distributed robotics, mobile computing and programmable matter. He leads the Robotic Neurobiology group, which develops self-reconfiguring robots, systems of self-organizing robots, and mobile sensor networks.","tags":null,"title":"Nelson Bighetti","type":"authors"},{"authors":["Âê≥ÊÅ©ÈÅî"],"categories":null,"content":"Âê≥ÊÅ©ÈÅî is a professor of artificial intelligence at the Stanford AI Lab. His research interests include distributed robotics, mobile computing and programmable matter. He leads the Robotic Neurobiology group, which develops self-reconfiguring robots, systems of self-organizing robots, and mobile sensor networks.\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed neque elit, tristique placerat feugiat ac, facilisis vitae arcu. Proin eget egestas augue. Praesent ut sem nec arcu pellentesque aliquet. Duis dapibus diam vel metus tempus vulputate.\n","date":1461110400,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1555459200,"objectID":"da99cb196019cc5857b9b3e950397ca9","permalink":"/author/%E5%90%B3%E6%81%A9%E9%81%94/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/%E5%90%B3%E6%81%A9%E9%81%94/","section":"authors","summary":"Âê≥ÊÅ©ÈÅî is a professor of artificial intelligence at the Stanford AI Lab. His research interests include distributed robotics, mobile computing and programmable matter. He leads the Robotic Neurobiology group, which develops self-reconfiguring robots, systems of self-organizing robots, and mobile sensor networks.","tags":null,"title":"Âê≥ÊÅ©ÈÅî","type":"authors"},{"authors":null,"categories":null,"content":" Coding is a skill, and getting good at a skill requires practice! You have already practiced a bit in the Practice sets. But the more you engage with R, the better you‚Äôll get.\nThe assignments in this section are meant to give you even more practice. To earn full credit, you must complete all aspects of the assignment. That includes things like typing out any sentences if I ask you to explain something.\nAssignment Instructions Submitting You should complete the assignments on your local computer. You will upload both your code and dataset files directly to our Canvas site to be graded.\nFor your code file, please name it LastName_A#_Code.R. For example, if I was turning in Assignment 1, it would be Cooper_A1_Code.R.\nSimilarly, for your data file, please name it LastName_Data.csv.\n Dataset In a perfect world, you would use your own research dataset. However, in order for you to practice all the different elements we cover in the lectures, your dataset should have the following characteristics:\n It should be in either a .csv or .txt file format. This is typical of most datasets. If it is not in either of these formats, and you don‚Äôt know how to convert it, please email me ASAP. It should contain rows and columns:  There must be at least 20 observations (rows). If you have a very long dataset (several hundred or thousands of rows), you may shorten it for the purposes of these assignments.  Ideally, the columns would be objects of different classes. Most importantly however is that there are at least 3 columns that would be considered numeric or integer. There should also be 1 or 2 columns that are characters. Of these, I would like at least 1 column to be a categorical variable. This must be de-identified! It is fine for coded IDs to be included (e.g., SubjectID etc.). However, please no identifying information. This includes names, family structures, zip codes and more. If your dataset has any of these items and you don‚Äôt know how to get rid of them, please email me ASAP!  If you do not have a dataset that meets these criteria, please email me ASAP and I will supply you with one.\nThe struggle is real when it comes to code. You might not get something at first, but that‚Äôs OK! Use Google! If after 2-3 hours, you‚Äôre still stuck on something, then reach out to me and I‚Äôll be happy to help. But the struggle is where all the learning takes place!\n   ","date":-62135596800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"b9d7929e6b0943738455b33dd1664142","permalink":"/assignments/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/assignments/","section":"assignments","summary":"Coding is a skill, and getting good at a skill requires practice! You have already practiced a bit in the Practice sets. But the more you engage with R, the better you‚Äôll get.","tags":null,"title":"About Assignments","type":"docs"},{"authors":null,"categories":null,"content":" These pages contain the lecture slides and videos, and are organized by topic.\nFirst, you will see a YouTube playlist. Sometimes there will only be 1 video, other times there will be multiple short videos. You are expected to watch these videos!\nBelow the YouTube playlist, you will find the lecture slides. The slides are embedded on each page. You can click in the slides and navigate through them with ‚Üê and ‚Üí. If you type ? (or shift + /) while viewing the slides you can see a list of slide-specific commands.\nYou will also find these two buttons directly above the slides:\n View all slides in new window  Download PDF of all slides They will allow you to open the slides in a new tab (to make them bigger) or to download a PDF copy of the slides (for printing or storing). I recommend using one of these features in order to make the slides larger and easier to see. But as I get older, my vision gets worse üëì ‚Äì so do whatever works for you!\nRemember, here‚Äôs the order of operations for this class:\n Watch the lecture videos While watching the videos, simultaneous follow along with the slides Complete that topic‚Äôs corrsponding Practice set Complete an Assignment  For more on what you should be doing during a particular week, please see the Syllabus.\n","date":-62135596800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"85e74472768c621ca94af057441bdf7f","permalink":"/lectures/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/lectures/","section":"lectures","summary":"These pages contain the lecture slides and videos, and are organized by topic.\nFirst, you will see a YouTube playlist. Sometimes there will only be 1 video, other times there will be multiple short videos.","tags":null,"title":"Lectures and Videos","type":"docs"},{"authors":null,"categories":null,"content":" Almost every lecture has a corresponding, interactive practice that you will work through after watching the lecture.\nYou‚Äôll see color coded boxes. Puzzle icons (like below) indicate that it‚Äôs your turn to give things a shot. There are also a couple of quiz questions scattered throughout.\nYour turn: This is where instructions for the interactive practices will be.\n ","date":-62135596800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"7f4e0723807d0b83adaddecf67df2c85","permalink":"/practice/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/practice/","section":"practice","summary":"Almost every lecture has a corresponding, interactive practice that you will work through after watching the lecture.\nYou‚Äôll see color coded boxes. Puzzle icons (like below) indicate that it‚Äôs your turn to give things a shot.","tags":null,"title":"Practice Problems","type":"docs"},{"authors":null,"categories":null,"content":" Importing Your Data into R We will be covering this in detail next class, but for now, please do the following:\nStep 1. Know where your data is saved! This could be your Desktop, Box, Dropbox, etc. Just know where it is.\n Step 2. In the Environment tab, click on Import Dataset Choose From text (base)\n Step 3. Select the file You should get a pop-up like this:\n   Step 4. Make the following Changes:  In the top left box, name your data something that makes sense. For example: hw1Data or votes_by_district or whatever. This name cannot start with a number (e.g., 1hwData would not work). Last item on the left is a checkbox that says Strings as factors. Please uncheck that box.   Step 5. Click ‚ÄúImport‚Äù Once your data looks ok in that bottom window, go ahead and click ‚ÄúImport‚Äù. You should now see your data.frame in the Environment tab. Email me ASAP if you are not able to get your data into R!\n  Assignment OK, now that you have your data in R, let‚Äôs go on to the actual assignment!\nIntroduction: Data Cleaning \u0026amp; Management The following are important steps to take for any code you might run. You want to make sure things look the way they ought to look, and that you (and whoever is reading your code) knows what is happening.\nHere‚Äôs your to-do list:\n In 1-2 sentences, describe your dataset. No need for a ton of detail, just generally, what‚Äôs in it.\n Using code, find the object class of each column vector. Then find the object class of the entire data set. Describe if these make sense, or are there any that were unexpected? If they were unexpected, why?\n Check out your variables that are text strings or characters. Do you want them to remain this way, or do you want to convert them into categorical variables, called factors? If they should be treated as categorical variables, please do so using the factor() function.   Here‚Äôs a HINT for the last item:\n new_column \u0026lt;- factor(data$column) makes a completely new object outside of the dataset. data$new_column \u0026lt;- factor(data$column) makes a new column that lives within the existing dataset. data$column \u0026lt;- factor(data$column) overwrites the original column.   Results: Summary Statistics ‚Äì Part 1 One of the first items in the ‚ÄúResults‚Äù section of an academic paper is to look at summary statistics of the variables of interest. Here‚Äôs your shot!\nHere‚Äôs your to-do list:\n For 2 of your numeric/integer variables, get the mean, standard deviation, and range. If you don‚Äôt know the function names, Google it!\n For your categorical variable, get very quick counts of each level (e.g., how many observations are there in group 1 vs.¬†group 2).   Here are some HINTS:\n In your functions, pay attention to missing data! The easiest function to use for your second to-do item was shown in the slides under ‚Äúcommonly used functions‚Äù.   Results: Summary Statistics ‚Äì Part 2 Another thing we check in the Results section of a paper is whether our variables of interest might differ based on something we don‚Äôt want. For example, if all of our male participants were notably older than all of our female participants, it might screw up the interpretation of our results.\nHere‚Äôs your to-do list:\n Make a smaller datasets that only contain items from each level of your categorical variable. For example, let‚Äôs say the factor ‚Äútreatment_group‚Äù had 2 levels: treatment and control. Make a new data.frame that is something like data_treatment and another new data.frame that is data_controls. Do this via INDEXING and LOGICAL OPERATORS.\n One thing you might notice is that when you make your new mini data.frames, if you look at the factor variable, it still has the original number of levels from the bigger data.frame ‚Äì even though the other levels are not in there. Overwrite that variable to be a factor again (same thing as in the Data Cleaning section above). After you should have only 1 level (ex: all treatment or all controls).\n Now repeat the same summary statistics from above (for the numeric/integers only) but on each of your new mini data.frames. Do these numbers seem dramatically different or are they similar? What does that mean for your analysis?   Here is a HINT:\n Logical operators result in TRUE or FALSE. You can use this within indexing so that anything that evaluates to TRUE will be either the rows or the columns that are kept.   Congrats, you‚Äôve finished! Submit both your code and your data file to Canvas.\n  ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"9b25432b2f0a7bc05f8cab37d67ccdfe","permalink":"/assignments/01-assignment/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/assignments/01-assignment/","section":"assignments","summary":"Importing Your Data into R We will be covering this in detail next class, but for now, please do the following:\nStep 1. Know where your data is saved! This could be your Desktop, Box, Dropbox, etc.","tags":null,"title":"Assignment 1","type":"docs"},{"authors":null,"categories":null,"content":" Let‚Äôs get to it!\nIntroduction: Script Prep Before running any code, you want to make sure that you have the proper packages installed. This requires an internet connection (preferably a strong one - not a coffee shop connection)! The loading of packages does not require an internet connection.\nHere‚Äôs your to-do list:\n Below this box is a list of packages that you will need for the rest of this course. Check to see if they are in your Packages tab. If they are not there, please install them.\n How many of the above packages did you install? If it‚Äôs 3 or more, then you may move on to the next question. If it was less than 3, please install as many as you need so that you have installed at least 3 packages total (this is to give you practice!). See below for some more optional packages.\n Load the tidyverse and psych packages.   The required packages for this course:\n knitr tidyverse note that this one installs a lot of stuff - that‚Äôs OK! psych ggpubr RColorBrewer  Some optional packages:\n ez - nice for within-subjects ANOVA lavaan - structural equation modeling ggpredict - great for plotting complex interactions of continuous variables broom - might be installed with the above packages; useful for converting the output of regressions into data.frames lme4 - hierarchical linear modeling (aka multilevel modeling) caret - machine learning   Results: Summary Statistics In the first assignment, I asked you to manually calculate some summary statistics. This next to-do list will show you a much simpler way of getting summary statistics.\nHere‚Äôs your to-do list:\n Import your dataset. Make sure all the variables that should be factors are treated as such.\n Use the describe() function to get summary statistics of your numeric/integer columns only. You do not need to include things like participant ID in this ‚Äì just the variables you might care about in an actual analysis.\n Modify one of it‚Äôs arguments so that it also shows the interquartile range.\n Now use describeBy() with one of your categorical variables. What changes?\n Finally, use the summary() function on the entire data.frame (keep it simple with summary(data)). Do you prefer the describe/describeBy functions or the summary function? There is no right answer here. I just want to know your preference and why.    Results: Fun With Statistics Let‚Äôs have some good old fashioned nerdy fun with statistics.\nHere‚Äôs your to-do list:\n Pick 2 of your numeric/integer variables (preferably 2 that you think might be related). Get the covariance of each variable using cov(). You may choose to store this as a new object or simply print it out to the console.\n Now take those same 2 variables, and get the z-scores of each variable. You may use the scale() function that we‚Äôve previously used or you can do it in a different manner. Store these as a new data.frame. That is, you should end up with a data.frame that has 2 columns. Column 1 contains the z-scores of the first variable, and column 2 contains the z-scores of the second variable.\n Now get the covariance of your new data.frame. The one that has z-scores. Again, you may store this as a new object or simply print it out to the console.\n Finally, get the correlation of the two variables from the original data.frame (not the one with z-scores). Use the cor() function. Compare this correlation to the different covariances. What do you notice? Do you remember your statistics class? üòâ    Results: Plot Your Data Now for the crux of almost every academic paper! Plotting!\nHere‚Äôs your to-do list:\n You will be making plots using ggplot2 code. As long as you have loaded the tidyverse package, you should be able to run these easily. However, check to make sure that there is a check mark ‚úÖ next to the ggplot2 package under the Packages tab. If it is unchecked, then please load it.\n Make a scatterplot of the 2 variables from your original data.frame. Make sure the points are not the color black. Specify a new color of your choice.\n Make a scatterplot of the 2 variables from your z-scored data.frame. What is the difference between this plot and the one you just made?\n Finally, make a scatter plot of the 2 original variables, make the colors AND the shapes based on one of your categorical variables.  Add the following layer to your plot geom_smooth(method = \u0026quot;lm\u0026quot;, aes(color = yourFactorVariable)) Are there different relationships for each category?     Results: Influence of Outliers Outliers can be a real pain in the butt for researchers. One challenge that researchers face is determining which observations are actually outliers to begin with. That is, are they real scores that we should consider? Or are they an artifact of something else? One common way of defining an outlier is to say let‚Äôs treat any score that is more than 2 standard deviations away from the mean as an outlier. That‚Äôs what you‚Äôre going to do here, using the same 2 variables that you used above in your scatterplots (use the variables that are not z-scores).\nHere‚Äôs your to-do list:\n Make a new data.frame that contains all of your columns from the original, but remove the rows that contain outliers ‚Äì as defined as being more than 2 standard deviations away from the mean.   Here are some HINTS on how to do this:\n Use multiple logical operators that are then nested within a function. ‚ÄúAway from the mean‚Äù can be in two directions. That is, you can have outliers because values are too high or too low. Now I want you to remake the 3rd plot from above, but now using this new dataset where the outliers are removed. (Include the geom_smooth(method = \u0026quot;lm\u0026quot;, aes(color = yourFactorVariable)) layer) Compare the two plots. Are the trends different now that you‚Äôve removed the outliers?  General Note On Outliers: I am not suggesting that this ‚Äú2 standard deviations away from the mean‚Äù method is the correct way of defining an outlier. How you define outliers is completely dependent upon the data. Similarly, removing outliers is one option for handling them, but it is not the only option. How you want to handle outliers in your own research should be discussed with your colleagues before any statistical analyses are performed (and ideally before data collection begins).\n BOOM! It‚Äôs over! Submit both your code and your data file to Canvas.\n ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"9ec9d1d879dec2f2a220b3539aeb4093","permalink":"/assignments/02-assignment/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/assignments/02-assignment/","section":"assignments","summary":"Let‚Äôs get to it!\nIntroduction: Script Prep Before running any code, you want to make sure that you have the proper packages installed. This requires an internet connection (preferably a strong one - not a coffee shop connection)!","tags":null,"title":"Assignment 2","type":"docs"},{"authors":null,"categories":null,"content":"  Visualizing Star Wars Practice with Objects The whole point of making an object is that you can do things with them!  Practice with Vectors   Visualizing Star Wars Now that you‚Äôre oriented to RStudio, it‚Äôs time to write and execute some code. The following uses a data set about Star Wars characters (yay!). This is the same dataset as the Objects lecture\nYou try:\nRead through the lines of code. You probably won‚Äôt understand anything, but that‚Äôs OK! Click ‚ÄúRun Code‚Äù Watch what happens!    Over the course of this basic training, we‚Äôll cover all the elements in this code block that produced this graph. It‚Äôs 100% OK if it looks like complete gibberish to you right now!\n Practice with Objects  Objects allow you to store things (values, models, entire datasets etc.) They are the nouns of programming languages; they are typically what we are acting on We give an object a name; this is called assignment, and it takes the form of:  nameOfMyObject  objectToStore The thing on the LEFT is the name you want to give your object.\nThen the arrow; first \u0026lt; (less than sign), then - (hyphen/dash) with no space in between.\nThe thing you want to actually store for later goes on the RIGHT.\nYou try! Create an object called continents that stores the number 7\n Note:\n Make sure you hit ‚ÄúRun Code‚Äù before ‚ÄúSubmit Answer‚Äù If you get a message that‚Äôs something like ‚ÄúLast value is invisible‚Äù, you can ignore it    Things to note: If you were to run this line of code from within RStudio, you would see the word continents in the Environment pane (upper right side). This is an easy way for you to glance over and see if your object is actually stored.\n Notice that nothing printed out when you ran the code above. That code simply says ‚Äústore the number 7 in an object called continents‚Äù. No where does it say \u0026quot;show me what is stored in the continents object. To do that, you simply need to type it out again, like this:\n  continents \u0026lt;- 7 continents ## [1] 7 ‚òùÔ∏è The second line prints out continents, so the number 7 appears.\nIn your research, most of the time, you don‚Äôt necessarily want to print out every object. But it‚Äôs very helpful for things like homework assignments or showing your collaborators an answer/value.\nQuick Quiz\n   The whole point of making an object is that you can do things with them! For example:\n# I have 5 chickens chickens \u0026lt;- 5 # I have 4 cows cows \u0026lt;- 4 # How many animals do I have in total? chickens + cows ## [1] 9 You can also update your objects!\n# I sold 3 chickens chickens \u0026lt;- chickens - 3 # I bought 8 cows cows \u0026lt;- cows + 8 # What is my new total number of animals? # Still the same line of code from before! chickens + cows ## [1] 14 In this scenario, we did an ‚Äúoverwrite‚Äù of our original chickens and cows objects. We could have stored those as new objects. Something like: chickens_new \u0026lt;- chickens - 3. You will need to decide whether it makes sense to overwrite an object or to create a new one. Base it on what you‚Äôre trying to accomplish.\nQuick Quiz\n    Practice with Vectors A vector is a group of objects that‚Äôs 1-dimensional:\n It can be a row, a column, or just stand alone To make a vector, you can combine or concatenate objects together using c() Each object (vector or otherwise) has a specific data class. this can be things like numeric, character, factors, logical etc.  Check out this table:\n  ID State Smoker Age    ID1 Missouri TRUE 20  ID2 Iowa FALSE 18  ID3 Missouri FALSE 32  ID4 Idaho TRUE 25  ID5 Maine FALSE 25    Here, each row can be considered it‚Äôs own vector, and each column can be considered it‚Äôs own vector.\nYou try:\nFirst, create 4 vectors for each of these columns. Make sure they contain the same exact values as what you see in this table! Assign each vector to the following corresponding name:   ids state smoker age  Then, check the class() of each of your newly created vectors.    Remember Star Wars? You‚Äôve already made a factor! You turned species into a factor. The result is that in our graph, we have discrete categories for the different types of Star Wars characters!\nempire empire$species ggplot(data = empire, aes(x = mass, y = height)) +\n\u0026nbsp;\u0026nbsp;geom_point(aes(size = mass,\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;color = species),\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;alpha = .5) +\n\u0026nbsp;\u0026nbsp;labs(title = \"Star Wars Characters\",\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;subtitle = \"by size\",\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;x = \"Weight (kg)\",\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;y = \"Height (cm)\") +\n\u0026nbsp;\u0026nbsp;scale_size(guide = \"none\")  You are a ‚≠ê Learning to code can be really intimidating. But you‚Äôre doing great! Keep it up!\n    ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"82a1f689a043b2c6844afd564f071d1f","permalink":"/practice/02-practice/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/practice/02-practice/","section":"practice","summary":"Visualizing Star Wars Practice with Objects The whole point of making an object is that you can do things with them!  Practice with Vectors   Visualizing Star Wars Now that you‚Äôre oriented to RStudio, it‚Äôs time to write and execute some code.","tags":null,"title":"Practice Set: Objects","type":"docs"},{"authors":null,"categories":null,"content":" Testing Things The first part is going to be a test run to see if a particular type of document works with your computer. It should, but we‚Äôre going to test it out here just in case. You do NOT need to submit the test file.\nWARNING The following section requires the internet. Please make sure you have a stable connection before completing the exercise. PLEASE tell me as soon as possible if any errors come up. This will be a large part of what we will be doing next week, so if it‚Äôs not working, we need to get it worked out BEFORE you continue on to the Reproducibility section.\nPLEASE READ ALL OF THE STEPS BELOW BEFORE ACTUALLY TRYING IT. Follow these steps:\n Step 1 In your console set your working directory somewhere. It doesn‚Äôt really matter where, as long as you can easily find it.\n Step 2 Next, open a new R Notebook. You can do this via File \u0026gt; New File \u0026gt; R Notebook or by clicking the white paper with green plus sign from the top left corner (this is the same as opening a new R script) and choosing R Notebook. It should look something like this:\n   Step 3 Next, find the button at the top that says Preview and click the arrow next to it. You should get a drop down menu. Select Knit to HTML. It should look like this:\n  It will prompt you to save the file. That‚Äôs OK! Give it a name like testNotebook or whatever you‚Äôd like.\n Step 4 Finally, you should see something that pops up, and it should look like this:\n  As long as the final thing shown above popped up, you‚Äôre good! It‚Äôs ok if you see a lot of scary stuff in the console after. But, if the thing above did not pop up, please take a screen shot of the scary console text! It will be easier for me to help you if I can see the message. Scary text that is actually OK might look like:\n    Actual Assignment Introduction: Script Prep Open a new script file and complete this assignment (the same way you‚Äôve been doing for previous assignments).\nHere‚Äôs your to-do list:\n At the top of your script, read in your dataset, load in the tidyverse package, and make a comment that confirms that the above test run thing worked.    Methods: Data Wrangling Let‚Äôs practice with data wrangling. Everyone‚Äôs data is different, so this might depend on what you‚Äôre working with.\nHere‚Äôs your to-do list:\n Make a tidyverse code chunk that uses at least 3 tidyverse functions. Do whatever you think makes the most sense.   Here‚Äôs a list of some of the common tidyverse functions that you might want to use:\n pivot_wider pivot_longer filter separate unite mutate select arrange rename recode any of the join functions (see cheatsheet for more)   Results Let‚Äôs make a plot with error bars!\nHere‚Äôs your to-do list:\n Make a smaller data.frame that contains all the information you would need to make a bar graph (including information for error bars of +/- 1 standard deviation) for at least two of your categorical variables.\n Then, use the plotting code below and replace the missing values with your data so that you can actually make the bar graph!   Here‚Äôs a HINT:\n The hardest part of this is trying to imagine what it is that you need! You need a continuous variable that you can collapse into a value per level of each of your two categorical variables. Then you need to calculate everything needed for the error bars.  Here‚Äôs the plotting code that you can copy/replace your data with\nXXX-1: correct data.frame XXX-2: one of the two categorical variables XXX-3: the summarized continuous variable XXX-4: the second of the categorical variables XXX-5: the value of the lower edge of the error bar XXX-6: the value of the upper edge of the error bar ggplot(data = XXX-1, aes(x = XXX-2, y = XXX-3, fill = XXX-4)) + geom_col(position = position_dodge(width=.9)) + geom_errorbar(aes(ymin = XXX-5, ymax = XXX-6), position = position_dodge(width=.9), width = .2)  Fantastic work! Don‚Äôt forget to submit your code and data file to Canvas.\n  ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"6567ceafc96b6f268a30c7832587e5c8","permalink":"/assignments/03-assignment/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/assignments/03-assignment/","section":"assignments","summary":"Testing Things The first part is going to be a test run to see if a particular type of document works with your computer. It should, but we‚Äôre going to test it out here just in case.","tags":null,"title":"Assignment 3","type":"docs"},{"authors":null,"categories":null,"content":"  Vectors Recap Indexing   Vectors Recap Before diving into indexing, let‚Äôs make sure we‚Äôre üíØ good with vectors. In the previous practice set, you created the following 4 vectors:\nids \u0026lt;- c(\u0026quot;ID1\u0026quot;, \u0026quot;ID2\u0026quot;, \u0026quot;ID3\u0026quot;, \u0026quot;ID4\u0026quot;, \u0026quot;ID5\u0026quot;) # character state \u0026lt;- c(\u0026quot;Missouri\u0026quot;, \u0026quot;Iowa\u0026quot;, \u0026quot;Missouri\u0026quot;, \u0026quot;Idaho\u0026quot;, \u0026quot;Maine\u0026quot;) # character/factor smoker \u0026lt;- c(TRUE, FALSE, FALSE, TRUE, FALSE) # logical age \u0026lt;- c(20, 18, 32, 25, 25) # numeric You can do something to all elements of the vector:\n# add 10 years to everyone\u0026#39;s age age \u0026lt;- age + 10 age ## [1] 30 28 42 35 35 If you have 2 vectors, these can be combined in a number of ways!\nLet‚Äôs try to add the number 2 to the first person‚Äôs age, 4, to the second person‚Äôs age etc.\nnumbers \u0026lt;- c(2, 4, 6, 8, 10) age + numbers ## [1] 32 32 48 43 45 You can also append one vector on to the next. Notice that to do this, we use c(). We‚Äôre concatenating or combining the two vectors.\nnewVector \u0026lt;- c(age, numbers) newVector ## [1] 30 28 42 35 35 2 4 6 8 10 If you have 2 vectors, but they are not the same length, R will recycle the shorter vector.\nshortVector \u0026lt;- c(1000, 2000) newVector + shortVector ## [1] 1030 2028 1042 2035 1035 2002 1004 2006 1008 2010 If the longer vector is not a multiple of the shorter vector, the process still works but you‚Äôll also get a warning message (notice how it still works, though):\nage + shortVector ## Warning in age + shortVector: longer object length is not a multiple of shorter ## object length ## [1] 1030 2028 1042 2035 1035 You try! The following exercises are a modified version of the sat.act dataset (but broken up into vectors). The SAT \u0026amp; ACT are both standardized college admissions tests in the United States. The ACT technically has 4 parts, but only the overall score is reported here. The SAT is broken up into verbal and quantitative categories:\n age in years act contains scores from the ACT tests; range 1-36, norm ~20 satV contains the Verbal scores from the SAT; range 200-800, avg ~500 satQ contains the quantitative scores from the SAT; range 200-800, avg ~500  Follow the directions above each code chunk!\n   Indexing Nice work! Let‚Äôs move on to practicing indexing, specifically with 1-dimensional vectors.\nThink of the index as an address, and your entire vector as a street. Where on the street is the particular object you‚Äôre looking for? We want to use that object‚Äôs address to find it. To do so, we use the following format:\nVECTOR[index] For example, if I wanted to get the 4th item in the state vector, it would look something like this:\nstate[4]  ## [1] \u0026quot;Idaho\u0026quot;  To check out more than 1 index:\n If the indices you want are in a row:  Use the colon : to get items # through # Ex: 3:5 reads as ‚Äúitems 3 through 5‚Äù  If they are NOT in a row:  Make a mini vector with c() Ex: c(1, 4, 18) reads as ‚Äúitems 1, 4, and 18‚Äù   You try! Practice indexing on the same sat.act variables from above, including the variables you created! Follow the directions above each code chunk.\n  A Demonstration Let‚Äôs say we wanted to find the act scores of everyone that was over the age of 35. The line of code below finds out who is over 35 years old, and stores it as it‚Äôs own vector called older. Let‚Äôs take a look:\n# find people over 35 yrs old older \u0026lt;- which(age \u0026gt; 35) older ## [1] 10 14 20 21 24 28 35 37 38 43 45 61 62 74 80 81 85 87 90 98 Look at the numbers that printed out. They are not the actual ages! We know this because we asked for people over 35 years old, and there are lots of numbers under 35 here. Our vector older now contains the indices of people over the age of 35!\nThe first item in older‚Ä¶\nolder[1] ## [1] 10 ‚Ä¶corresponds to an index in the age vector of someone over the age of 35. Let‚Äôs look at the first 15 people in the age vector.\nage[1:15] ## [1] 19 23 20 27 33 26 30 19 23 40 23 34 32 41 20 Notice that the first person over 35 is the 10th person. They are 40 years old. That is why the first number in older is ‚Äú10‚Äù. It‚Äôs not the actual age of 40‚Ä¶it‚Äôs the ‚Äúaddress‚Äù of the 40 year old within the age vector; it‚Äôs the index!\nWe can use this to our advantage! We wanted to find the act scores of everyone over 35 yrs old. Now that we have our older vector, we don‚Äôt need to manually type out the indices!\nactOldScores \u0026lt;- act[older] actOldScores ## [1] 35 35 32 28 30 21 33 28 24 30 36 34 32 32 21 26 28 24 30 33 To verify, we said that the 1st person over the age of 35 was at index #10. Let‚Äôs look at the act score for index #10\nact[10] ## [1] 35 That number (which happens to be 35!) matches the very first number in the actOldScores vector. Our code worked! actOldScores represents all the act scores of people over the age of 35.\nFYI: R is kind of weird in that it starts indexing at 1. You should know that most other programming languages begin indexing at 0. R and MATLAB are the only languages I‚Äôm aware of that begin at 1. Normally, the first element in the vector has an index of 0. If you plan on also using other programming languages, like python üêç, then this is something to be aware of.\n  Keep up the great work! Sometimes, it feels like you‚Äôre just kind of guessing until you get it right. Coding is kind of like a sport. It takes some time and practice to become good. But by completing this practice set and continuing with this bootcamp, you‚Äôre on the right track!\nIf you feel lost at any point, please reach out!\n    ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"d19cb388740e38652aaf1c2254474a3f","permalink":"/practice/03-practice/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/practice/03-practice/","section":"practice","summary":"Vectors Recap Indexing   Vectors Recap Before diving into indexing, let‚Äôs make sure we‚Äôre üíØ good with vectors. In the previous practice set, you created the following 4 vectors:","tags":null,"title":"Practice Set: Indexing","type":"docs"},{"authors":null,"categories":null,"content":" Congratulations! By this point, you have learned a ton about R. In this assignment, I want you to make something that you might actually use in your real life. So you will be making your own summaries of the things you‚Äôve learned in this course ‚Äì it will basically your own cheatsheet or crib sheet. Something like this:\n  Requirements for the structure of the document Create a .Rmd file (either RNotebook or RMarkdown is fine). When you turn in the assignment, I want you to submit BOTH the .html file and the .Rmd file. You are free to choose the topics ‚Äì it can be anything we‚Äôve covered!\nHere‚Äôs your to-do list (e.g., your file must include the following):\n 3 large headers (at least) indicating the 3 topics you‚Äôll go through\n There must be (at least) 2 subheaders. They can both be under the same large header, or you can split them up.\n You must have some normal text with a sentence or two that describes the topic and/or gives notes to yourself. Within the normal text, there should be both bolded text and italicized text.\n There must be at least one code chunk per section that shows examples of the topic with code (see the above picture).    Final thoughts This assignment is not meant to be very difficult, just something you might find helpful. So think back on the past few weeks, and identify some topics that you struggled with. Those are the ones that should go in this document (so hopefully you won‚Äôt struggle with them in the future!). Some topics you can think about:\n Indexing Logical operators How to use functions Specific functions tidyverse Statistical analyses Plotting with ggplot2   So, so wonderful! Submit your .Rmd and .html file to Canvas.\n  ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"ec161626fb80d031dec799fefb60dc7c","permalink":"/assignments/04-assignment/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/assignments/04-assignment/","section":"assignments","summary":"Congratulations! By this point, you have learned a ton about R. In this assignment, I want you to make something that you might actually use in your real life. So you will be making your own summaries of the things you‚Äôve learned in this course ‚Äì it will basically your own cheatsheet or crib sheet.","tags":null,"title":"Assignment 4","type":"docs"},{"authors":null,"categories":null,"content":"  Data.frames Indexing Data.frames   Data.frames A data.frame is basically a spreadsheet. It‚Äôs 2-dimensional (rows \u0026amp; columns). Remember our starwars dataset?\n   name  height  mass  sex  homeworld  species      Luke Skywalker  172  77.0  male  Tatooine  Human    C-3PO  167  75.0  none  Tatooine  Droid    R2-D2  96  32.0  none  Naboo  Droid    Darth Vader  202  136.0  male  Tatooine  Human    Leia Organa  150  49.0  female  Alderaan  Human    Obi-Wan Kenobi  182  77.0  male  Stewjon  Human    Chewbacca  228  112.0  male  Kashyyyk  Wookiee    Han Solo  180  80.0  male  Corellia  Human    Yoda  66  17.0  male  NA  Yoda‚Äôs species    Boba Fett  183  78.2  male  Kamino  Human     Each row has 6 pieces of information and each column has 10 observations.\nLet‚Äôs make our own data.frame!\nFor the most part, you will be importing your data from somewhere else. We‚Äôll cover how to import data shortly in topic #7 of ‚ÄúThe Basics‚Äù.\n Making a data.frame has the following formatting (or syntax):\nnewDf data.frame(vector1,\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;vector2,\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;vector3) ‚òùÔ∏è Here we have:\nWhat we want to name our data.frame: newDf in blue The actual words data.frame in red The vectors we want included in yellow  In order to effectively create a new data.frame from multiple vectors, each vector should have the same number of items! If it doesn‚Äôt, R will ususally fill it in with the missing variable class NA.\nRemember these variables?\nids \u0026lt;- c(\u0026quot;ID1\u0026quot;, \u0026quot;ID2\u0026quot;, \u0026quot;ID3\u0026quot;, \u0026quot;ID4\u0026quot;, \u0026quot;ID5\u0026quot;) # character state \u0026lt;- c(\u0026quot;Missouri\u0026quot;, \u0026quot;Iowa\u0026quot;, \u0026quot;Missouri\u0026quot;, \u0026quot;Idaho\u0026quot;, \u0026quot;Maine\u0026quot;) # character/factor smoker \u0026lt;- c(TRUE, FALSE, FALSE, TRUE, FALSE) # logical age \u0026lt;- c(20, 18, 32, 25, 25) # numeric Let‚Äôs turn them into a data.frame.\ndemographics data.frame(ids,\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;state,\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;smoker,\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;age) Now that it‚Äôs a data.frame called demographics, it looks like this:    ids  state  smoker  age      ID1  Missouri  TRUE  20    ID2  Iowa  FALSE  18    ID3  Missouri  FALSE  32    ID4  Idaho  TRUE  25    ID5  Maine  FALSE  25     If you‚Äôre creating a new data.frame from vectors, you can easily adjust the column names.\ndemographics \u0026lt;- data.frame(SubjectID = ids, Location = state, SmokerTF = smoker, SubjectAge = age)    SubjectID  Location  SmokerTF  SubjectAge      ID1  Missouri  TRUE  20    ID2  Iowa  FALSE  18    ID3  Missouri  FALSE  32    ID4  Idaho  TRUE  25    ID5  Maine  FALSE  25     You try! Make a data.frame from the following SAT/ACT variables we‚Äôve been working with. Call the entire data.frame scores. Include the following variables and make sure they have the following as their column names:\n Age SAT_Verbal SAT_Quant SAT_Total SAT_Scaled ACT Avg_Scores     Indexing Data.frames In our last practice session, we went over indexing a 1-dimensional vector. For data.frames, the process is very similar, but now we have to account for 2 dimensions!\nLet‚Äôs take a look back at demographics    SubjectID  Location  SmokerTF  SubjectAge      ID1  Missouri  TRUE  20    ID2  Iowa  FALSE  18    ID3  Missouri  FALSE  32    ID4  Idaho  TRUE  25    ID5  Maine  FALSE  25     What if I wanted the 4th row, 3rd column?\ndemographics[4,3] ## [1] TRUE How about the location of subjects 1 through 3?\ndemographics[1:3, 2] ## [1] \u0026quot;Missouri\u0026quot; \u0026quot;Iowa\u0026quot; \u0026quot;Missouri\u0026quot; If you want all of either rows or columns, just leave it blank. But don‚Äôt forget the comma!\n# all the columns for row 2 demographics[2,] ## SubjectID Location SmokerTF SubjectAge ## 2 ID2 Iowa FALSE 18 # all the rows of column 4 demographics[,4] ## [1] 20 18 32 25 25 Earlier in this practice, I asked you to run the line head(scores). Using head() is just a shortcut for scores[1:6,]! head(scores) is a nice way to very quickly view a data.frame (especially really big data.frames!)\nWhat if you don‚Äôt know the column number? Use the $ sign! This is really, really, REALLY helpful! Plus, autocomplete is magical.\ndemographics$Location ## [1] \u0026quot;Missouri\u0026quot; \u0026quot;Iowa\u0026quot; \u0026quot;Missouri\u0026quot; \u0026quot;Idaho\u0026quot; \u0026quot;Maine\u0026quot; You try! Let‚Äôs practice using the empire dataset. (If you‚Äôve forgotten what it looks like, scroll to the top of this page) Follow the directions above each code chunk!\n   You‚Äôre chugging along and doing wonderfully!     ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"cc687c99dd1c5dc071184fb2efd70413","permalink":"/practice/04-practice/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/practice/04-practice/","section":"practice","summary":"Data.frames Indexing Data.frames   Data.frames A data.frame is basically a spreadsheet. It‚Äôs 2-dimensional (rows \u0026amp; columns). Remember our starwars dataset?\n   name  height  mass  sex  homeworld  species      Luke Skywalker  172  77.","tags":null,"title":"Practice Set: Objects Revisited","type":"docs"},{"authors":null,"categories":null,"content":" Instructions This assignment is all about making figures. It‚Äôs going to be a bit free-form because when it comes to making figures, there are a silly number of options. Here are the conditions:\n You must use the ggplot package and syntax. This should not be practice for base R. - Your choice of variables must make sense for the type of plot you are making. All figures must follow the basics of clear axis labels and titles! (please don‚Äôt make me take points off for this‚Ä¶) NO PIE CHARTS!   Visualizing data in different ways Pick 2 variables from your dataset. Make 3 different figures that show the relationship between these 2 variables. Your figures must include the following:\n A theme Make use of different colors (manually or with a color palette) You need to pick the best of the 3 figures and explain why you think this is the case After you‚Äôve picked your favorite, add a 3rd variable to that plot (just to your favorite one). You can choose the dimension on which to add the 3rd variable (aka which aesthetic). Did adding the 3rd variable enhance this plot or does it detract? Explain why.   Explanation vs.¬†Clutter Make a plot that uses at least 3 geoms. Make it as beautiful, publication-ready as you can. Then explain whether the extra geoms help explain your data or if it just clutters everything up.\nYahhoooooooo! We‚Äôll talk more about the theory of data viz later in the semester. But for now, you should feel comfortable plotting in the ggplot world.\nGo ahead and submit your .Rmd and .html file to Canvas.\n  ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"abcbc65c12f1015c072d2a3eeaac8680","permalink":"/assignments/05-assignment/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/assignments/05-assignment/","section":"assignments","summary":"Instructions This assignment is all about making figures. It‚Äôs going to be a bit free-form because when it comes to making figures, there are a silly number of options. Here are the conditions:","tags":null,"title":"Assignment 5","type":"docs"},{"authors":null,"categories":null,"content":"  Logical Operators Functions Help Pages Examples of a few functioins   Logical Operators Logical operators are crucial for understanding any programming language, not just R. Effective use of logic allows you to perform really complex computations with ease. The more comfortable you feel in using these, the better.\nFor the time being, let‚Äôs start simple. Check out the R\u0026amp;R slides for more complicated logical operator statements.\nWhat are the operators?\n == equality != inequality (! is read as not) \u0026gt; greater than \u0026gt;= greater than or equal to \u0026lt; less than \u0026lt;= less than or equal to  Logical operators test whether a statement is TRUE or FALSE.\nLet‚Äôs revisit our demographics data.frame    SubjectID  Location  SmokerTF  SubjectAge      ID1  Missouri  TRUE  20    ID2  Iowa  FALSE  18    ID3  Missouri  FALSE  32    ID4  Idaho  TRUE  25    ID5  Maine  FALSE  25     TRUE or FALSE: Is anyone from the state of Missouri? To answer this with code, we could do:\ndemographics$Location == \u0026quot;Missouri\u0026quot; ## [1] TRUE FALSE TRUE FALSE FALSE The result is a vector of TRUE and FALSE ‚Äì one for each item in demographics$Location. The 1st and 3rd elements are TRUE, so those people are from ‚ÄúMissouri‚Äù. The others are no.\nSpelling, capitalization, and quotation marks count!\nThese things (and missing/extra parentheses) account for at least 75% of all your errors! üôÄ If you‚Äôre evaluating a number, you do NOT need quotation marks. If it‚Äôs a character string, you do. For example:\n# no quotes around the character string demographics$Location == Missouri ## Error in eval(expr, envir, enclos): object \u0026#39;Missouri\u0026#39; not found # capitalization demographics$Location == \u0026quot;missouri\u0026quot; ## [1] FALSE FALSE FALSE FALSE FALSE ‚òùÔ∏è Note that this doesn‚Äôt throw and error, but everything is returned as FALSE. But we know that‚Äôs not true‚Ä¶\n# spelling demographics$Location == \u0026quot;Missour-uh\u0026quot; ## [1] FALSE FALSE FALSE FALSE FALSE Same as the capitalization thing.\nBe careful with = vs ==!\n == is a logical operator = is for assignment. It‚Äôs the same thing as \u0026lt;-  Look at the example below.\n Logical operator usage‚Ä¶\n# Is each element in the SubjectID column equal to the character # string \u0026quot;ID4\u0026quot;? demographics$SubjectID == \u0026quot;ID4\u0026quot; ## [1] FALSE FALSE FALSE TRUE FALSE Assignment usage‚Ä¶\n# Make each element in the SubjectID column equal to the character # string \u0026quot;ID4\u0026quot; demographics$SubjectID = \u0026quot;ID4\u0026quot; # now view the column demographics$SubjectID ## [1] \u0026quot;ID4\u0026quot; \u0026quot;ID4\u0026quot; \u0026quot;ID4\u0026quot; \u0026quot;ID4\u0026quot; \u0026quot;ID4\u0026quot; Now that we‚Äôve gone through this demo, let‚Äôs change the SubjectID column back to what it‚Äôs supposed to look like.\ndemographics$SubjectID \u0026lt;- ids # view the column to double check demographics$SubjectID ## [1] \u0026quot;ID1\u0026quot; \u0026quot;ID2\u0026quot; \u0026quot;ID3\u0026quot; \u0026quot;ID4\u0026quot; \u0026quot;ID5\u0026quot; Quick Quiz\n   Functions Functions are the heart and soul of R, and are especially powerful. They are the verbs of a programming language because the act on the objects. Each function has:\nName that is unique Arguments - What is the verb acting on? How should the function behave? Output or the result of the function (can be anything!) that can be stored to another object  You‚Äôve already seen some functions in action! You just didn‚Äôt know it, yet!\nc() is the combine/concatenate function:\n It‚Äôs name is c  It‚Äôs input is whatever you‚Äôre trying to combine It‚Äôs output is the vector that has the elements combined   data.frame() is the function for making a data.frame:\n It‚Äôs name is data.frame It‚Äôs input is a series of vectors that all have the same length It‚Äôs output is a nicely formatted data.frame  class() is the function for finding out the class of an object:\n It‚Äôs name is class It‚Äôs input is the object you are examining It‚Äôs output is a character telling you what class the object is  Most functions use more arguments than what we‚Äôve seen above. And those arguments have names.\nUse the argument names!\nAutocomplete will help so it‚Äôs not so tedious. See the lecture slides for the example with the round() function. When you have multiple arguments, you separate them with a comma function(argument 1 = something, argument 2 = something else).\nYou try! Follow the directions for each chunk below to create different sequences of numbers.\n   Help Pages One of the biggest mistakes I see new coders make is that they pull up the help pages, but don‚Äôt actually read them. TAKE THE TIME TO READ THEM! There is a lot of really, really helpful information in there. And they are all organized the same way. See the lecture slides for a breakdown of the Help pages.\nYou can always look at help by typing ?functionName. For example, ?cbind will bring up the help documentation for the function cbind().\nYou try! Follow the directions below each block to ultimately create a plot of standardized variables from our empire dataset. Note that this exercise is intentionally a bit harder than previous exercises ‚Äì that‚Äôs because you‚Äôre getting better!\n  FYI: In this exercise, we made a very basic scatter plot. But it‚Äôs not very pretty. We will talk a lot about making really pretty plots. You can check out the very basics in the Stats \u0026amp; Plot section, and then we‚Äôll go into a lot more detail when we get to the Data Visualization section.\n Congratulations! You‚Äôre making great progress and are well on your way to being a bad@$% programmer!\n   Examples of a few functioins In the corresponding lecture, I listed a couple functions that you might use quite frequently. Below are examples of how to use these functions. Note that you do not need to go through all of them at this time. However, I would encourage you to come back and take a look at some point.\nlength(), nrow(), ncol()  length() is the same as getting the last element‚Äôs index position nrow() and ncol() tell you how many rows and columns there are in a data.frame, respectively  length(demographics$SubjectID) ## [1] 5 nrow(demographics) ## [1] 5 ncol(demographics) ## [1] 4 Note that these don‚Äôt work properly for any object\n# length on a 2-d object just gives the 2nd dimension (columns) # lots of people get this confused and think it should return the # number of rows! length(demographics) ## [1] 4 # nrow and ncol of a 1-d vector don\u0026#39;t make sense... # there is no such thing as columns or rows in a vector nrow(demographics$SubjectID) ## NULL ncol(demographics$SubjectID) ## NULL  factor() and as.factor() Both of these convert a character vector into a factor. Factors are a special case of character where there is inherent meaning/grouping. Categorical variables.\n(Note: For the life of me, I can‚Äôt figure out the difference between factor() and as.factor() ü§∑‚Äç‚ôÄ so you can think of them as interchangable.)\n# Our \u0026#39;Location\u0026#39; variable consists of states. We might want # to think of this as a categorical variable, where each state # is a meaingfully different category from the next state. # Don\u0026#39;t forget to re-assign the variable so that it stores your new # factor! demographics$Location \u0026lt;- factor(demographics$Location) demographics$Location ## [1] Missouri Iowa Missouri Idaho Maine ## Levels: Idaho Iowa Maine Missouri # To double check, use the `class()` function class(demographics$Location) ## [1] \u0026quot;factor\u0026quot; The LEVELS of a factor are all the different categories. Here, we have 4 states. R will always put these in alphabetical order unless you tell it otherwise (hint: you can change this by modifying one of the arguments).\n table() for quick counts Especially good for factors \u0026amp; logicals!\n# how many states are in each category? table(demographics$Location) ## ## Idaho Iowa Maine Missouri ## 1 1 1 2 # states x smoker table table(demographics$Location, demographics$SmokerTF) ## ## FALSE TRUE ## Idaho 0 1 ## Iowa 1 0 ## Maine 1 0 ## Missouri 1 1  cbind() and rbind() for adding columns and rows, respectively These are for if you have a vector that you want to add to a data.frame. You should make sure there‚Äôs the same number of items ‚Äì which changes depending on if you‚Äôre adding a row or a column!\nLet‚Äôs add a column consisting of survey scores, on a scale of 1 to 10. Then we‚Äôll add a row.\n# first, let\u0026#39;s add a column for surveys. there are currently # 5 rows/observations, so we\u0026#39;ll want 5 elements in this vector survey \u0026lt;- c(6, 4, 10, 2, 8) # now use cbind() to add it to your data.frame # the 1st argument is the data.frame # the 2nd argument is the thing you want to add to it # (you\u0026#39;re combining BOTH things) # note that we re-assign the entire data.frame demographics \u0026lt;- cbind(demographics, survey) # print it out to view demographics ## SubjectID Location SmokerTF SubjectAge survey ## 1 ID1 Missouri TRUE 20 6 ## 2 ID2 Iowa FALSE 18 4 ## 3 ID3 Missouri FALSE 32 10 ## 4 ID4 Idaho TRUE 25 2 ## 5 ID5 Maine FALSE 25 8 ############ # now let\u0026#39;s add a row. there are 5 columns, so we need to add an # element that will match up with each column newParticipant \u0026lt;- c(\u0026quot;ID6\u0026quot;, \u0026quot;Iowa\u0026quot;, FALSE, 28, 5) # now use rbind() to bind by rows # the 1st argument is the data.frame # the 2nd argument is the row you want to add to it. This makes it the LAST row # (if you switched the order, it would become the FIRST row) demographics \u0026lt;- rbind(demographics, newParticipant) # print it out to view demographics ## SubjectID Location SmokerTF SubjectAge survey ## 1 ID1 Missouri TRUE 20 6 ## 2 ID2 Iowa FALSE 18 4 ## 3 ID3 Missouri FALSE 32 10 ## 4 ID4 Idaho TRUE 25 2 ## 5 ID5 Maine FALSE 25 8 ## 6 ID6 Iowa FALSE 28 5 There is 1 slight issue with rbind(). Vectors will always take on the least specific class So newParticipant is considered a character vector because all of it‚Äôs elements could be thought of as characters, but not everything could be considered numeric or logical. This means that when we added it to the demographics data.frame, it made any column that wasn‚Äôt already a character into characters!\nclass(demographics$SubjectID) ## [1] \u0026quot;character\u0026quot; class(demographics$Location) # factors are special characters ## [1] \u0026quot;factor\u0026quot; class(demographics$SmokerTF) ## [1] \u0026quot;character\u0026quot; class(demographics$SubjectAge) ## [1] \u0026quot;character\u0026quot; class(demographics$survey) ## [1] \u0026quot;character\u0026quot; However, the last 3 columns should NOT be characters. I change them back below. See if you can figure out what each function does.\ndemographics$SmokerTF \u0026lt;- as.logical(demographics$SmokerTF) class(demographics$SmokerTF) ## [1] \u0026quot;logical\u0026quot; demographics$SubjectAge \u0026lt;- as.numeric(demographics$SubjectAge) class(demographics$SubjectAge) ## [1] \u0026quot;numeric\u0026quot; demographics$survey \u0026lt;- as.numeric(demographics$survey) class(demographics$survey) ## [1] \u0026quot;numeric\u0026quot; (Ok for real this time‚Ä¶The End)\n  ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"e7f5910be7d575a4e72a959c4474fefc","permalink":"/practice/05-practice/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/practice/05-practice/","section":"practice","summary":"Logical Operators Functions Help Pages Examples of a few functioins   Logical Operators Logical operators are crucial for understanding any programming language, not just R. Effective use of logic allows you to perform really complex computations with ease.","tags":null,"title":"Practice Set: Functions","type":"docs"},{"authors":null,"categories":null,"content":"  Packages Miscellaneous   Quick Quiz\n  Packages When you first open R, there are already lots of functions availble for you to use. However, the are WAY more functions out there in the world! They are stored in packages, and are free/easy to download and use at your convenience.\nThis is a huge part of what makes R awesome. Anyone from around the world (including you!) can write their own custom function. And if you think ‚Äúhey, other people might want to use this cool function‚Äù you can publish it in a package.\nPackages also often contain datasets that are great to work with. At the very bottom of a function‚Äôs ?help page, there are Examples of how to use that function. Often, these examples use datasets that come from the same package the function comes from.\nThere are 2 steps to getting/using functions/datasets in a package:\nInstall the package  You need to be connected to the internet You need to know the exact name of the package You only do this ONCE (equivalent of installing Microsoft Word on your computer)  Load the package in your R session  You do NOT need to be connected to the internet You need to know the exact name of the pacakge You need to do this every time you open R and want to use the function/dataset   For installing and loading packages, you can either do this a) via code or b) via the RStudio interface in the Packages tab on the lower right hand portion of the screen (see corresponding lecture video for more). In my opinion‚Ä¶\n It is totally OK to use the RStudio interface to install packages since you only do this once. However, I strongly suggest using code for loading packages. The reason is that you often write some code, save the file, and come back to it later. If you use functions from certain packages in that file, then you need to remember which packages you used ‚Äì easier said than done! So it‚Äôs easier to write the code and keep it in that same file (usually at the top) so that you always have all the packages you need for a given script.  Installing packages with code To install a package, we use the install.packages() function\ninstall.packages(\"packageName\") ‚òùÔ∏è Here we have:\nThe function install.packages in blue Quotation marks around the package name The package‚Äôs name   Loading packages with code To load a package, we use the library() function\nlibrary(packageName) ‚òùÔ∏è Here we have:\nThe function library in blue The package‚Äôs name  Note how there are NO quotation marks when loading a package!\n  Miscellaneous Before you practice installing and loading packages, there are a couple random tidbits you should know about.\nSome packages come pre-installed with R (you can look at your Packages tab and see that stuff is already there!). This is referred to as base R. You do not need to load any special packages to use their functions. For example, the c() function is part of base R.\n Do NOT re-install a package you already have. R doesn‚Äôt like it, and can sometimes get confused. Always check your Packages tab first to see if you have the package.\n When you install a package, you often see a lot of stuff happening in your console, and it‚Äôs often in red font. So it looks like R is yelling at you. But it‚Äôs OK, R is not yelling at you ‚Äì so don‚Äôt sweat it. Most of the time, it‚Äôs loading dependencies (other packages that the current one you are trying to install depends on).\nSimilarly, when you load a package, sometimes messages are printed out along with it. Usually these are just helpful little tidbits, but the package still loads successfully.\n One of those little messages that might print out is something like:\nlibrary(psych) library(ggplot2) ## ## Attaching package: \u0026#39;ggplot2\u0026#39; ## The following objects are masked from \u0026#39;package:psych\u0026#39;: ## ## %+%, alpha Last time, we learned that functions have a unique name. This is true for all functions within a package! But every so often, there is 1 name that corresponds to functions from 2 different packages. In this example, there is a function called alpha() in the psych package AND a function called alpha() in the ggplot2 package.\nR will use the function from whichever package you loaded MOST RECENTLY. So here, the alpha() from psych is ‚Äúmasked‚Äù or hidden by alpha() from ggplot2. That is, the ggplot2 version of alpha() will be the default.\nYou can still use alpha() from the psych package though! You just need to add a double colon, like this: psych::alpha().\nThe way this manifests is you write some code, and it doesn‚Äôt work. And you get an error that is like function expects a data.frame when in reality, the function you are thinking of should actually have a single number as an input. That error, that it‚Äôs expecting something you‚Äôre not giving, can be a clue that R is calling the wrong function.\n When you install a package, you sometimes will get a message in the console that is something like There are binary versions available but the source versions are later. Do you want to install from sources the package which needs compliation? y/n.\nIf this happens, go ahead and type y in your console (for Yes). This will get you the latest version of the package, but it might take slightly longer to install (not too much longer!).\nWINDOWS USERS: you might want to consider installing a package called rtools40 (see here) to help with installing these ‚Äúsource‚Äù versions. Although I wouldn‚Äôt worry much about it unless it comes up.\n Keep your software up to date on your computer! Life will be so much easier for you. I know people tend to avoid this because they‚Äôre scared of losing stuff. But you should be saving everything of importance to a cloud-based service (Box, Dropbox, Github, OSF etc.). So even if your desktop is wiped clean, it shouldn‚Äôt matter. Act as though your computer could get stolen at any moment. You certainly wouldn‚Äôt want to lose your entire thesis or all of your work files because someone stole your stuff‚Ä¶ Save appropriately!\nSome suggestions:\n Update your operating system when it prompts you (within a reasonable timeframe) Right after updating your operating system is a good time to check if R needs to update. Note, this is R‚Ä¶not RStudio. If you haven‚Äôt updated your operating system in a while, I would check if R needs an update about every 6 months. Right after you update R, then I suggest checking for updates on RStudio. If you haven‚Äôt updated R for a while, then I would check if RStudio needs an update about every 6 months. Sometimes, I find that I need to re-install all of my packages after an RStudio update. But not always. It‚Äôs kind of annoying, but frankly it doesn‚Äôt take that long to get everything back up to speed. Right after you update RStudio, I would check if any of your packages need to be updated. Go to the Packages tab and click Update. I personally do chunks of ~5-10 packages at a time, just to make sure they all update properly. I do this after updating RStudio. It will sometimes ask you to restart RStudio before updating your packages ‚Äì that‚Äôs OK, go ahead and restart. I usually only update my packages immediately after updating RStudio, but it doesn‚Äôt hurt to check every so often.\n   You try! Open up RStudio on your computer.\nStep 1: Go to your Packages tab. Check to see if you have the following packages:\n tidyverse we will talk about this at length after finishing The Basics psych great for many statistics used in psychology and social sciences broom great for making the output of statistical models into organized data.frames RColorBrewer we will use this to make color palettes when we do data visualization ggpubr we will use this to make multi-panel figures when we do data visualization knitr we will use this to generate reports when we do reproducibility kableExtra we will use this to make pretty tables in our reports when we do reproducibility  Step 2: For any of these packages listed that you DO NOT HAVE in your Packages tab, install them.\nStep 3: Open a new script and load all of these packages.\nRemember, you might get some messages about what‚Äôs installed or what‚Äôs ‚Äúmasked‚Äù (see notes above). But contact me/send screenshots if you have other errors like ‚Äúpackage cannot be loaded‚Äù. Hopefully it should work seamlessly!\n With packages at your fingertips, you now have most of the tools you need to be and R programmer! The next few sections help refine and practice these skills. Keep it up!\n   ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"531ab76d7fc0499cb079e2521af07852","permalink":"/practice/06-practice/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/practice/06-practice/","section":"practice","summary":"Packages Miscellaneous   Quick Quiz\n  Packages When you first open R, there are already lots of functions availble for you to use. However, the are WAY more functions out there in the world!","tags":null,"title":"Practice Set: Packages","type":"docs"},{"authors":null,"categories":null,"content":"  Directories Organize your files/projects!  Importing Data   This time we‚Äôll talk about several little things, but all relate to importing your own data files. Most of us are not creating data.frames from scratch every time. Instead, our data is collected elsewhere, and stored as a file that a colleague shares with you, you download from the internet, etc.\nDirectories Your computer is just a series of folders. Folders are also known as directories. R will only look and save things to your working directory. To find your current working directory, you can type getwd() in your console. To change your working directory to somewhere else, you can use setwd(\u0026quot;/file/path/goes/here\u0026quot;).\nFun Fact: The ~ sign helps shorten some of the really long file paths. Try setwd(\u0026quot;~/rest/of/file/path\u0026quot;). It usually points to the User‚Äôs directory. For instance, on my computer, it is set to /Users/Coop.\nOrganize your files/projects! Whether you use RProjects (see 7: Loading files slides for more) or not, you should have some sort of structure to your projects. You‚Äôll need to play around with what‚Äôs right for you. Generally speaking, a good idea is something like this:\n Project Name (top level directory)  Data (sub-directory of Project Name) Code (sub-directory) Results (sub-directory)   You can be even more organized and thorough, depending on your project. But those above are a good starting point. Here‚Äôs an example of the directory structure of one of my projects. I‚Äôve changed the names to be meaningful here.\n Project Name  data  data from source 1 data from source 2 data from source 3  code  preprocessing code postprocessing code  results  figures  manuscripts   Again, things will change based on your specific projects. But keeping things organized and using directories to your advantage will help you in the long run!\nWARNING: You need to save your files to the cloud. Absolutely do not save anything of importance to a Desktop or any old place on your computer. Box, Dropbox, Github, Open Science Framework, or any internal tool your school/company uses is fine. Always assume that your computer could get stolen tomrorow. You would be devastated if all of your work was suddenly gone.\nOk, I‚Äôll get off the soapbox now‚Ä¶\n   Importing Data For a lot of us, our data will be stored as either .csv or .txt files. R can handle many types of files but we‚Äôll just practice with .csv. (For more on importing other types, ask your old friend Google)\nYou can use the RStudio interface to import your file (see the slides \u0026amp; corresponding videos for how to do this). In fact, doing that once is a good idea to make sure it looks the way you want it to. However, once you finish, there will be a line of code that has printed to your console. COPY THIS LINE OF CODE and put it into your script file. That way, next time you open your script, you do not need to use the RStudio interface to re-import. You simply run that line of code, and BAM! You‚Äôre good to go.\nTo read in a .csv The function for reading in a .csv file is read.csv() and the input is the file path.\n To read in a .txt The function for reading in a .txt file is read.delim() and the input is the file path.\nNote: R recently updated. Previously, when you imported a dataset, it would try to automatically convert character variables into factor variables. This created a lot of problems for a lot of people. As of version 4.0, R doesn‚Äôt do that anymore.\nYou should all be using an updated version of R so hopefully this won‚Äôt matter. But just in case, what you can do is add the argument stringsAsFactors = FALSE to the read.csv() or read.delim() functions, after the file paths.\n You try! In the lectures, I used the midus dataset. Now it‚Äôs your turn to import it locally (in RStudio on your computer).\n Step 1: Create a folder/directory on your desktop specific for this workshop. Step 2: Download the midus.csv dataset from below. Save it to this new directory. Step 3: Go into RStudio and open a new script file. Step 4: In your script file set your working directory (setwd()) to your newly created directory. Step 5: Use either code or the RStudio interface to import your data. If you use the RStudio interface, make sure you copy the function/file path it spits out into the console, and paste that into your script file. If you use code for importing, type/run that line from your script file (not your console). Step 6: Save that script file. Next time you open R, you won‚Äôt need to use the Import button or type any new code!    The dataset   midus.csv  Bonus: (not required) If you are in a directory, but you want to go further down within that directory, you do not need to keep doing setwd(). Remember, your working directory is where R will look. So for example, let‚Äôs say you have this file structure:\n Project Name  data  data from source 1 data from source 2 data from source 3  code  preprocessing code postprocessing code  results  figures  manuscripts   If your current working directory is code, but the file you need is in the preprocessing code directory, you do NOT need to re-set your working directory. Instead, modify your file path like this:\nnewData \u0026lt;- read.csv(\u0026quot;preprocessing code/file.csv\u0026quot;) Or let‚Äôs say the file you need is in figures, but your working directory is Project Name:\nnewData \u0026lt;- read.csv(\u0026quot;results/figures/file.csv\u0026quot;) You can keep hitting the TAB button until you find the folder you‚Äôre looking for!\nIf you want to go up one directory level, you can use .. in the file path. For instance, let‚Äôs say your current working directory is figures, but you want the Project Name directory. This requires going up 2 levels (from figures to results, and then from results to Project Name). You can use .. to indicate 1 level. For example:\n# from figures to Project Name: setwd(\u0026quot;../../Project Name\u0026quot;) # from data source 3 to preprocessing code newFile \u0026lt;- read.csv(\u0026quot;../code/preprocessing code\u0026quot;) Notice that it doesn‚Äôt matter what function you‚Äôre using. You can always go up and down directory levels!\n     ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"89678b214d7e24b26c23e144f00af8bd","permalink":"/practice/07-practice/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/practice/07-practice/","section":"practice","summary":"Directories Organize your files/projects!  Importing Data   This time we‚Äôll talk about several little things, but all relate to importing your own data files. Most of us are not creating data.","tags":null,"title":"Practice Set: Loading/Importing Files","type":"docs"},{"authors":null,"categories":null,"content":"  Break! (ish)   Break! (ish) The corresponding lecture has exercises already built in. Please complete those exercises, and move on to the last bit of The Basics workshop!\n   ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"432cae2c2e57cfb9a5c80ba7013130c0","permalink":"/practice/08-practice/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/practice/08-practice/","section":"practice","summary":"Break! (ish)   Break! (ish) The corresponding lecture has exercises already built in. Please complete those exercises, and move on to the last bit of The Basics workshop!","tags":null,"title":"Practice Set: Review \u0026 Random","type":"docs"},{"authors":null,"categories":null,"content":"  Plotting with ggplot2 Statistics   Note: It will be really helpful for you to have the 9: Stats \u0026amp; Plot slides pulled up in a different tab while you complete this practice set. You‚Äôll likely need to refer to it.\n Setup: We will be using the same midus.csv dataset for this practice. You have 2 choices‚Ä¶\nIf you want to practice on this website in the code chunks below, please do the following: - Load the package ggplot2 - (You do not need to import the dataset ‚Äì I have done that for you so that you can access it through this website) - Make sure the variables sex, heart_self, and heart_father are treated as factor() variables. - Use the same na.omit() function from the 8: R\u0026amp;R slides to remove all NA variables. - Look at the first 6 rows of the midus data.frame by using the head() function.\n If you want to practice locally (actually opening up RStudio on your computer), please do the following: - Either create a new script or open an existing script. Your choice. - Import the data file. You should already have this downloaded, but just in case, here it is again. Make sure the code you use to import the file winds up in your script!   midus.csv  Load the package ggplot2 Make sure the variables sex, heart_self, and heart_father are treated as factor() variables. Use the same na.omit() function from the 8: R\u0026amp;R slides to remove all NA variables. Look at the first 6 rows of the midus data.frame by using the head() function.      Plotting with ggplot2 You can make plots with base R (we‚Äôve done this once already!). But they‚Äôre kinda ugly. Actually, they‚Äôre really ugly. So we‚Äôre going to use a package called ggplot2 to make prety plots. This practice set will go through the very basics of how to use ggplot2. For more control over your plots, check out the Data Viz section.\ngg stands for the ‚Äúgrammar of graphics‚Äù. It‚Äôs syntax (or code format) is the same as what we‚Äôve already been doing using functions and objects. However, like the lovable ogre Shrek, ggplot2 has layers. Each layer corresponds to one aspect of the plot.\nThe basic layout of ggplot2 is:\nggplot(things that impact the entire plot) +\n\u0026nbsp;\u0026nbsp;geom_something(things that impact just the something) ‚òùÔ∏è Here we have:\n 2 different FUNCTIONS:  ggplot is the function for the first layer. geom_something is the function for the second layer, where the something is replaced with a plot type. For example, geom_point is a scatter plot and geom_histogram is a histogram.  Each of these functions takes ARGUMENTS:  The arguments control what you want the plot to look like. Many arguments are actually aesthetics and wrapped within aes().  If your argument depends on the data, it‚Äôs wrapped in an aes() If your argument does not depend on the data, it does not need to be in an aes()  In the first layer (within ggplot), this will contain things that impact the whole plot. Like your x- and y- axes and what data you‚Äôre actually plotting. In the second layer (within geom_something), this will contain things that impact only that layer. If you have a histogram, how wide should the bins be? What color should the bars be? Etc.  Each layer is separated by a + sign. This tells R ‚Äúhey wait, I‚Äôm not done yet‚Äù.  It should ALWAYS go at the very end of each line‚Ä¶never at the beginning of a new line. You do not need one on the very last line of your plot code (here, there‚Äôs not one after geom_something) because after the last line, you‚Äôre ready for R to run your code.   Example on aesthetics/arguments from the slides No arguments or aesthetics into geom_point layer (the default):\nggplot(data = midus, aes(x = age, y = BMI)) + geom_point() Argument in geom_point layer. But it is NOT dependent on the data. ‚ÄúMake all the points corn flower blue‚Äù. Note that the color is within quotes.\nggplot(data = midus, aes(x = age, y = BMI)) + geom_point(color = \u0026quot;cornflowerblue\u0026quot;) Argument in geom_point layer. But it IS dependent on the data. ‚ÄúMake the points different color based on the sex factor variable‚Äù. Since it‚Äôs dependent on the data, we wrap it within an aes(). Note that sex is not in quotes.\nggplot(data = midus, aes(x = age, y = BMI)) + geom_point(aes(color = sex))   Statistics The corresponding slides go through a variety of basic statistical tests. They are:\n t.test() cor() and cor.test() aov lm  Use the slides as a guide to complete the following exercises using stats and plotting.\n\\(t\\)-test You try! Is there a difference in life satisfaction between people who have had heart problems compared to people who have not had heart problems?\n Statistic: \\(t\\)-test Plot: Boxplot  Bonus:\n Look at the help page for t.test(). How do you run a one-tailed \\(t\\)-test? Run it! Does your answer change? How could you fill the boxplots so that males and females are shown in different colors? Look at the help page for labs() and see if you can give your plot a title and different x- \u0026amp; y-axes labels.     Correlation You try! Does age correlate with BMI?\n Statistic: Correlation Plot: Scatter plot  Bonus:\n Set the size of all points to be 1.5 Change the x- \u0026amp; y-axes labels and add a title and subtitle Make the shape of the points different based on if they‚Äôve ever been diagnosed with a heart issue or not     ANOVA You try! Is there a main effect of age_category, a main effect of heart_self, and is there a age_category x heart_self interaction on BMI?\n Statistic: 3x2 ANOVA Plot: Bar plot   Setup for analysis As of now, we don‚Äôt have an age_category variable. The code below trichotomizes age into the following groups:\n 28-40 years old = ‚Äúyoung‚Äù 41-60 years old = ‚Äúmiddle‚Äù 60-84 years old = ‚Äúold‚Äù  Additionally, bar plots can kind of suck. The height of each bar should be the mean of the dependent variable for each group. After the trichotomizing code, I have written several lines of code to help you get all the data you need. Whenever you see an empty set of quotation marks \u0026quot;\u0026quot;, you need to fill in the blanks (HINT: read the variable names!).\nFinally, at the very bottom of the chunk, we make a data.frame based on everything from the middle chunk. You do NOT need to change this part of the code. But do try to understand what it‚Äôs doing!\n  Now, run the analysis Now that you‚Äôve done the hard work of making your categorical variable and your data.frame of means for the plot, go ahead and write/run code for the ANOVA and bar plot!\n (Again, we will learn how to do this analysis prep in a MUCH easier way when we talk about the tidyverse)\n  Regression You try!\nDoes self-reported physical health predict self-reported mental health? Do self-reported physical health and self-reported heart problems predict self-reported mental health (without an interaction)? Same as above but now including a self-reported physical health and self-reported heart problems interaction.   Statistic: Simple \u0026amp; Multiple Regression Plot: Scatter plot     CONGRATULATIONS! You have now finished The Basics portion of this bootcamp, workshop, class‚Ä¶whatever you want to call this. You‚Äôre basically ready to go work at Google \u0026amp; Facebook etc. See you at the next section where we‚Äôll learn how to clean and prep our data.\n    ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"6106d06730bfb05257c61188f093fcac","permalink":"/practice/09-practice/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/practice/09-practice/","section":"practice","summary":"Plotting with ggplot2 Statistics   Note: It will be really helpful for you to have the 9: Stats \u0026amp; Plot slides pulled up in a different tab while you complete this practice set.","tags":null,"title":"Practice Set: Statistics \u0026 Plotting","type":"docs"},{"authors":null,"categories":null,"content":" Relax, take a break    ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"8a39c055121ceaa6bad040afe6e6f675","permalink":"/practice/10-practice/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/practice/10-practice/","section":"practice","summary":" Relax, take a break    ","tags":null,"title":"Practice Set: Introduction to the Tidyverse","type":"docs"},{"authors":null,"categories":null,"content":" Get Out‚Ä¶(kinda, sorta, not really) Someone else has already made some great tutorials, so I‚Äôd like for you to complete those (no need to reinvent the wheel, right?). Please complete the two lessons linked in the ‚ÄúYou Try‚Äù boxes below.\nThe first one focuses on some dplyr functions that we‚Äôve gone over and introduces one that we did not go through. It starts with the functions individually, and it ends with incorporating the piping operator %\u0026gt;%.\n The second one looks at some more dplyr functions that we did cover. It should be excellent practice for you!\n  You try! Complete the following tutorials:\nIsolating data with dplyr Derive information with dplyr    You are newly initiated! People on Reddit and Twitter like to debate base R vs. tidyverse. A lot. It comes up more often than you‚Äôd think. For realz.\nNow that you know both you can participate in these debates, if you want! The #rstats community is awesome, but whenever one of these debates comes up it gets‚Ä¶special. Honestly, it‚Äôs not unlike the gif below‚Ä¶\n   ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"b8d972fc83681a9a860038b21130503f","permalink":"/practice/11-practice/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/practice/11-practice/","section":"practice","summary":"Get Out‚Ä¶(kinda, sorta, not really) Someone else has already made some great tutorials, so I‚Äôd like for you to complete those (no need to reinvent the wheel, right?). Please complete the two lessons linked in the ‚ÄúYou Try‚Äù boxes below.","tags":null,"title":"Practice Set: Dplyr","type":"docs"},{"authors":null,"categories":null,"content":" Get Out, Again Like last time, someone else has already made some great tutorials, so please do those. Please complete the two lessons linked in the ‚ÄúYou Try‚Äù boxes below.\nThe first one introduces the concept of ‚Äútidy data‚Äù and will focus on going from long to wide format and vice versa.  This tutorial will use the functions spread() and gather(). These are from an older version of R! They recently renamed these functions to pivot_wider() and pivot_longer. They do the same things and the concepts are the same. But the function names and argument names have changed.\n The second one focuses on separating and uniting columns.  You try! Complete the following tutorials:\nReshape Date Separate and Unite Columns   If you think you will be taking multiple data.frames or data sets and combining them into one larger data.frame, then I suggest this additional tutorial on joining data sets. It‚Äôs not required, but if this is something you‚Äôll be doing a lot of, I suggest getting some practice doing it!\n  You‚Äôre doing great! We all go in and out of productivity. It‚Äôs totally fine! Just be kind to yourself. And if you need to take a break, take one!\n   ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"9c885490864049258cfc7155bbc209a6","permalink":"/practice/12-practice/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/practice/12-practice/","section":"practice","summary":"Get Out, Again Like last time, someone else has already made some great tutorials, so please do those. Please complete the two lessons linked in the ‚ÄúYou Try‚Äù boxes below.","tags":null,"title":"Practice Set: Tidyr","type":"docs"},{"authors":null,"categories":null,"content":" Watch this video    ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"821ff6ce4446408dc78068ddc7c5a1a2","permalink":"/practice/13-practice/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/practice/13-practice/","section":"practice","summary":" Watch this video    ","tags":null,"title":"Practice Set: Introduction to RMarkdown","type":"docs"},{"authors":null,"categories":null,"content":" No Practice Currently, there‚Äôs not a great way to do interactive tutorials for RMarkdown (hopefully soon!). So you can keep going to the Data Visualization section\n   ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"287d389ef688dc6a649fec242137b528","permalink":"/practice/14-practice/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/practice/14-practice/","section":"practice","summary":" No Practice Currently, there‚Äôs not a great way to do interactive tutorials for RMarkdown (hopefully soon!). So you can keep going to the Data Visualization section\n   ","tags":null,"title":"Practice Set: Rmd Anatomy","type":"docs"},{"authors":null,"categories":null,"content":" No Practice Currently, there‚Äôs not a great way to do interactive tutorials for RMarkdown (hopefully soon!). So you can keep going to the Data Visualization section\n   ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"efcf3e436193acec22f6d34fa96df991","permalink":"/practice/15-practice/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/practice/15-practice/","section":"practice","summary":" No Practice Currently, there‚Äôs not a great way to do interactive tutorials for RMarkdown (hopefully soon!). So you can keep going to the Data Visualization section\n   ","tags":null,"title":"Practice Set: Flexibility","type":"docs"},{"authors":null,"categories":null,"content":" üé∂ Singing a different tune üé∂ We have now gone through the basics of ggplot2 several times in several places. For some practice on the basics, see Practice Set 9: Stats \u0026amp; Plot.\nThis time, I would like you to do a tutorial on making histograms in ggplot2. We will not talk much about histograms specifically very much, so I want you to practice your ggplot2 skills while learning something new.\nYou try! Complete the following tutorial:\nHistograms\n    ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"8f4488cd69e489279fcc7e7cbcfd1156","permalink":"/practice/16-practice/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/practice/16-practice/","section":"practice","summary":"üé∂ Singing a different tune üé∂ We have now gone through the basics of ggplot2 several times in several places. For some practice on the basics, see Practice Set 9: Stats \u0026amp; Plot.","tags":null,"title":"Practice Set: Intro to Data Visualization","type":"docs"},{"authors":null,"categories":null,"content":"  Bubble Plots Color Palettes \u0026amp; Themes The Ugliest Plot in the World   Let‚Äôs get going, shall we? You try! The code below is broken. Your job is to fix it!\n   Bubble Plots Bubble plots are a lot like scatter plots with an extra size dimension (See here for more). In ggplot2, it‚Äôs easy to make! All you have to do is put the size argument inside of aes().\nCheck it out!\nggplot(data = midus, aes(x = self_esteem, y = life_satisfaction)) + geom_point(alpha = .5, aes(size = hostility)) + labs(x = \u0026quot;Self-Esteem\u0026quot;, y = \u0026quot;Life Satisfaction\u0026quot;, title = \u0026quot;Bubble Plot\u0026quot;) Note that bubble plots are awesome if you work with spatial data (think of a map where a bubble might represent population density).\n Color Palettes \u0026amp; Themes In the lecture slides, we talked about making your plot pretty with color palettes, especially with RColorBrewer. You can use the function display.brewer.all() function to find palettes that you like. It also has very helpful arguments to narrow down the palettes you might like.\nYou try!\nLook up the help documentation for display.brewer.all() - Use this function to find a color palette that is good for 3 colors - Include the argument type = \u0026quot;qual\u0026quot; - Use an argument to make your color palette colorblind friendly - Pick whichever palette you like, and use it in the code below (in the exercise boxes) Change the overall theme to be more minimalist You might find that some of the categories overlap. Make an adjustment so you can see each distribution more clearly.   Look up the help documentation for display.brewer.all() Look for the different parameters listed in the box above.\n  Now implement your color palette and theme changes Edit the code below to make the plot according to the specifications in the box above (a color palette, a theme, and an adjustment to make the overlapping categories easier to read).\n   The Ugliest Plot in the World You try! The code below makes THE ugliest plot ever. Your job is to work backwards and turn this into a plot that is publication-ready (and not super ugly). Do so without deleting any whole layers. Just modify the existing code.\n  You‚Äôre doing GREAT!     ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"15bdd760401e43d9f6f202f1748d5e5a","permalink":"/practice/17-practice/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/practice/17-practice/","section":"practice","summary":"Bubble Plots Color Palettes \u0026amp; Themes The Ugliest Plot in the World   Let‚Äôs get going, shall we? You try! The code below is broken. Your job is to fix it!","tags":null,"title":"Practice Set: Customize Your Plots","type":"docs"},{"authors":null,"categories":null,"content":"  Review of midus Faceting Adding Lines   Review of midus Let‚Äôs take a preview of midus, just to remember what we‚Äôve got. Remember, we added a ‚Äúsession‚Äù variable. (Don‚Äôt forget to scroll all the way over!)\n    ID  sex  age  BMI  physical_health_self  mental_health_self  self_esteem  life_satisfaction  hostility  heart_self  heart_father  age_category  session      1  10001  Male  61  26.263  2  4  42  7.750  5.5  No  No  old  session1    2  10002  Male  69  24.077  5  5  34  8.250  6.0  No  Yes  old  session2    6  10011  Female  52  25.991  5  4  41  7.000  5.5  No  No  middle  session1    8  10015  Female  53  32.121  3  3  31  7.375  6.0  No  Yes  middle  session2    10  10018  Male  49  22.499  4  4  41  8.500  6.0  No  No  middle  session1    11  10019  Male  51  29.987  4  5  38  7.625  4.5  No  No  middle  session2      Faceting Faceting is an easy way to create sub-plots based on a categorical/factor variable. There are two main ways of faceting: - facet_grid will create a grid or matrix of sub-plots - facet_wrap will lay out each sub-plot kind of like a ribbon\nYou try! Imagine each of the 3740 midus observations were randomly assigned to belong to one of two groups. Add to the code below to facet based on session and this new group variable. The result should include 4 subplots. Organize them such that they are in a 2x2 layout, with group 1 in the left column, group 2 in the right column, session1 in the first row, and session2 in the second row.\n  You try! Now, use facet_wrap to get sub-plots reflecting all 3 factor variables (age_category, group, and session). How many sub-plots should you wind up with? Organize them such that there are 3 columns.\n   Adding Lines You can use geom_vline and geom_hline to make vertical and horizontal lines, respectively. You‚Äôll need to specify a x- or y-intercept.\nOften, we want these lines to be based on summary statistics. This is where the tidyverse comes in very handy!\nYou try! Change the code below to represent the mean of self_esteem per age_category.\n Plot these means as horizontal lines HINT: You do NOT need to change the meansSelfEsteem code, only the plotting code BONUS: How can you get rid of the legend that shows the line type?    Almost done‚Ä¶     ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"07e5543d2b2af0b58400af39630fc16c","permalink":"/practice/18-practice/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/practice/18-practice/","section":"practice","summary":"Review of midus Faceting Adding Lines   Review of midus Let‚Äôs take a preview of midus, just to remember what we‚Äôve got. Remember, we added a ‚Äúsession‚Äù variable.","tags":null,"title":"Practice Set: Multipanel Figures \u0026 Adding To Your Plot","type":"docs"},{"authors":null,"categories":null,"content":" That‚Äôs all, folks! Now that you‚Äôve finished the Intro to R portion, you‚Äôre ready to move on to bigger and better things. Feel free to access these materials at any time if you just want to refresh your memory.\n   ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"4e0eb9a941f26f729a07ce31cc4518db","permalink":"/practice/19-practice/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/practice/19-practice/","section":"practice","summary":"That‚Äôs all, folks! Now that you‚Äôve finished the Intro to R portion, you‚Äôre ready to move on to bigger and better things. Feel free to access these materials at any time if you just want to refresh your memory.","tags":null,"title":"Practice Set: Layers on Layers on Layers","type":"docs"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Academic\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further talk details can easily be added to this page using Markdown and $\\rm \\LaTeX$ math code.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"96344c08df50a1b693cc40432115cbe3","permalink":"/talk/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example/","section":"talk","summary":"An example talk using Academic's Markdown slides feature.","tags":[],"title":"Example Talk","type":"talk"},{"authors":null,"categories":null,"content":"Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you\u0026rsquo;ll find some examples of the types of technical content that can be rendered with Academic.\nExamples Code Academic supports a Markdown extension for highlighting code syntax. You can enable this feature by toggling the highlight option in your config/_default/params.toml file.\n```python import pandas as pd data = pd.read_csv(\u0026quot;data.csv\u0026quot;) data.head() ```  renders as\nimport pandas as pd data = pd.read_csv(\u0026quot;data.csv\u0026quot;) data.head()  Math Academic supports a Markdown extension for $\\LaTeX$ math. You can enable this feature by toggling the math option in your config/_default/params.toml file.\nTo render inline or block math, wrap your LaTeX math with $...$ or $$...$$, respectively.\nExample math block:\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |} {\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2}$$  renders as\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left |\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right |^2}$$\nExample inline math $\\nabla F(\\mathbf{x}_{n})$ renders as $\\nabla F(\\mathbf{x}_{n})$.\nExample multi-line math using the \\\\\\\\ math linebreak:\n$$f(k;p_0^*) = \\begin{cases} p_0^* \u0026amp; \\text{if }k=1, \\\\\\\\ 1-p_0^* \u0026amp; \\text {if }k=0.\\end{cases}$$  renders as\n$$f(k;p_0^*) = \\begin{cases} p_0^* \u0026amp; \\text{if }k=1, \\\\\n1-p_0^* \u0026amp; \\text {if }k=0.\\end{cases}$$\nDiagrams Academic supports a Markdown extension for diagrams. You can enable this feature by toggling the diagram option in your config/_default/params.toml file or by adding diagram: true to your page front matter.\nAn example flowchart:\n```mermaid graph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2] ```  renders as\ngraph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2]  An example sequence diagram:\n```mermaid sequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! ```  renders as\nsequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good!  An example Gantt diagram:\n```mermaid gantt section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d ```  renders as\ngantt section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d  An example class diagram:\n```mermaid classDiagram Class01 \u0026lt;|-- AveryLongClass : Cool \u0026lt;\u0026lt;interface\u0026gt;\u0026gt; Class01 Class09 --\u0026gt; C2 : Where am i? Class09 --* C3 Class09 --|\u0026gt; Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla class Class10 { \u0026lt;\u0026lt;service\u0026gt;\u0026gt; int id size() } ```  renders as\nclassDiagram Class01 \u0026lt;|-- AveryLongClass : Cool \u0026lt;\u0026lt;interface\u0026gt;\u0026gt; Class01 Class09 --\u0026gt; C2 : Where am i? Class09 --* C3 Class09 --|\u0026gt; Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla class Class10 { \u0026lt;\u0026lt;service\u0026gt;\u0026gt; int id size() }  An example state diagram:\n```mermaid stateDiagram [*] --\u0026gt; Still Still --\u0026gt; [*] Still --\u0026gt; Moving Moving --\u0026gt; Still Moving --\u0026gt; Crash Crash --\u0026gt; [*] ```  renders as\nstateDiagram [*] --\u0026gt; Still Still --\u0026gt; [*] Still --\u0026gt; Moving Moving --\u0026gt; Still Moving --\u0026gt; Crash Crash --\u0026gt; [*]  Todo lists You can even write your todo lists in Academic too:\n- [x] Write math example - [x] Write diagram example - [ ] Do something else  renders as\n Write math example Write diagram example Do something else  Tables Represent your data in tables:\n| First Header | Second Header | | ------------- | ------------- | | Content Cell | Content Cell | | Content Cell | Content Cell |  renders as\n   First Header Second Header     Content Cell Content Cell   Content Cell Content Cell    Asides Academic supports a shortcode for asides, also referred to as notices, hints, or alerts. By wrapping a paragraph in {{% alert note %}} ... {{% /alert %}}, it will render as an aside.\n{{% alert note %}} A Markdown aside is useful for displaying notices, hints, or definitions to your readers. {{% /alert %}}  renders as\n A Markdown aside is useful for displaying notices, hints, or definitions to your readers.   Icons Academic enables you to use a wide range of icons from Font Awesome and Academicons in addition to emojis.\nHere are some examples using the icon shortcode to render icons:\n{{\u0026lt; icon name=\u0026quot;terminal\u0026quot; pack=\u0026quot;fas\u0026quot; \u0026gt;}} Terminal {{\u0026lt; icon name=\u0026quot;python\u0026quot; pack=\u0026quot;fab\u0026quot; \u0026gt;}} Python {{\u0026lt; icon name=\u0026quot;r-project\u0026quot; pack=\u0026quot;fab\u0026quot; \u0026gt;}} R  renders as\n  Terminal\n Python\n R\nDid you find this page helpful? Consider sharing it üôå ","date":1562889600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562889600,"objectID":"07e02bccc368a192a0c76c44918396c3","permalink":"/post/writing-technical-content/","publishdate":"2019-07-12T00:00:00Z","relpermalink":"/post/writing-technical-content/","section":"post","summary":"Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.","tags":null,"title":"Writing technical content in Academic","type":"post"},{"authors":["Nelson Bighetti"],"categories":null,"content":" Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.   Supplementary notes can be added here, including code and math.\n","date":1554595200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554595200,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"/publication/preprint/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/preprint/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example preprint / working paper","type":"publication"},{"authors":["Nelson Bighetti"],"categories":[],"content":"from IPython.core.display import Image Image('https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png')  print(\u0026quot;Welcome to Academic!\u0026quot;)  Welcome to Academic!  Install Python and JupyterLab  Install Anaconda which includes Python 3 and JupyterLab.\nAlternatively, install JupyterLab with pip3 install jupyterlab.\nCreate or upload a Jupyter notebook Run the following commands in your Terminal, substituting \u0026lt;MY-WEBSITE-FOLDER\u0026gt; and \u0026lt;SHORT-POST-TITLE\u0026gt; with the file path to your Academic website folder and a short title for your blog post (use hyphens instead of spaces), respectively:\nmkdir -p \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ cd \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ jupyter lab index.ipynb  The jupyter command above will launch the JupyterLab editor, allowing us to add Academic metadata and write the content.\nEdit your post metadata The first cell of your Jupter notebook will contain your post metadata ( front matter).\nIn Jupter, choose Markdown as the type of the first cell and wrap your Academic metadata in three dashes, indicating that it is YAML front matter:\n--- title: My post's title date: 2019-09-01 # Put any other Academic metadata here... ---  Edit the metadata of your post, using the documentation as a guide to the available options.\nTo set a featured image, place an image named featured into your post\u0026rsquo;s folder.\nFor other tips, such as using math, see the guide on writing content with Academic.\nConvert notebook to Markdown jupyter nbconvert index.ipynb --to markdown --NbConvertApp.output_files_dir=.  Example This post was created with Jupyter. The orginal files can be found at https://github.com/gcushen/hugo-academic/tree/master/exampleSite/content/post/jupyter\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567641600,"objectID":"6e929dc84ed3ef80467b02e64cd2ed64","permalink":"/post/jupyter/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/post/jupyter/","section":"post","summary":"Learn how to blog in Academic using Jupyter notebooks","tags":[],"title":"Display Jupyter Notebooks with Academic","type":"post"},{"authors":["Nelson Bighetti","Âê≥ÊÅ©ÈÅî"],"categories":["Demo","ÊïôÁ®ã"],"content":"Create a free website with Academic using Markdown, Jupyter, or RStudio. Choose a beautiful color theme and build anything with the Page Builder - over 40 widgets, themes, and language packs included!\n Check out the latest demo of what you\u0026rsquo;ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\n üëâ Get Started üìö View the documentation üí¨ Ask a question on the forum üë• Chat with the community üê¶ Twitter: @source_themes @GeorgeCushen #MadeWithAcademic üí° Request a feature or report a bug ‚¨ÜÔ∏è Updating? View the Update Guide and Release Notes ‚ù§Ô∏è Support development of Academic:  ‚òïÔ∏è Donate a coffee üíµ Become a backer on Patreon üñºÔ∏è Decorate your laptop or journal with an Academic sticker üëï Wear the T-shirt üë©‚Äçüíª Contribute      Academic is mobile first with a responsive design to ensure that your site looks stunning on every device.   Key features:\n Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 15+ language packs including English, ‰∏≠Êñá, and Portugu√™s Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files.  Themes Academic comes with automatic day (light) and night (dark) mode built-in. Alternatively, visitors can choose their preferred mode - click the sun/moon icon in the top right of the Demo to see it in action! Day/night mode can also be disabled by the site admin in params.toml.\n Choose a stunning theme and font for your site. Themes are fully customizable.\nEcosystem   Academic Admin: An admin tool to import publications from BibTeX or import assets for an offline site  Academic Scripts: Scripts to help migrate content to new versions of Academic  Install You can choose from one of the following four methods to install:\n  one-click install using your web browser (recommended)  install on your computer using Git with the Command Prompt/Terminal app  install on your computer by downloading the ZIP files  install on your computer with RStudio  Then personalize and deploy your new site.\nUpdating  View the Update Guide.\nFeel free to star the project on Github to help keep track of updates.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1461110400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555459200,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"/post/getting-started/","publishdate":"2016-04-20T00:00:00Z","relpermalink":"/post/getting-started/","section":"post","summary":"Create a beautifully simple website in under 10 minutes.","tags":["Academic","ÂºÄÊ∫ê"],"title":"Academic: the website builder for Hugo","type":"post"},{"authors":["Nelson Bighetti","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.   Supplementary notes can be added here, including code and math.\n","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441065600,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"/publication/journal-article/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/journal-article/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example journal article","type":"publication"},{"authors":null,"categories":["R"],"content":" R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nYou can embed an R code chunk like this:\nsummary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.:19.0 3rd Qu.: 56.00 ## Max. :25.0 Max. :120.00 fit \u0026lt;- lm(dist ~ speed, data = cars) fit ## ## Call: ## lm(formula = dist ~ speed, data = cars) ## ## Coefficients: ## (Intercept) speed ## -17.579 3.932  Including Plots You can also embed plots. See Figure 1 for example:\npar(mar = c(0, 1, 0, 1)) pie( c(280, 60, 20), c(\u0026#39;Sky\u0026#39;, \u0026#39;Sunny side of pyramid\u0026#39;, \u0026#39;Shady side of pyramid\u0026#39;), col = c(\u0026#39;#0292D8\u0026#39;, \u0026#39;#F7EA39\u0026#39;, \u0026#39;#C4B632\u0026#39;), init.angle = -50, border = NA )  Figure 1: A fancy pie chart.   ","date":1437703994,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1437703994,"objectID":"10065deaa3098b0da91b78b48d0efc71","permalink":"/post/2015-07-23-r-rmarkdown/","publishdate":"2015-07-23T21:13:14-05:00","relpermalink":"/post/2015-07-23-r-rmarkdown/","section":"post","summary":"R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.","tags":["R Markdown","plot","regression"],"title":"Hello R Markdown","type":"post"},{"authors":["Nelson Bighetti","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.   Supplementary notes can be added here, including code and math.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"/publication/conference-paper/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/conference-paper/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example conference paper","type":"publication"},{"authors":null,"categories":null,"content":"  Videos Slides   Videos  Installing R \u0026amp; RStudio   Slides  View all slides in new window  Download PDF of all slides\nInstallation        ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"788ea5ad7f029537442e4deb23a07252","permalink":"/lectures/00-lecture/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/lectures/00-lecture/","section":"lectures","summary":"  Videos Slides   Videos  Installing R \u0026amp; RStudio   Slides  View all slides in new window  Download PDF of all slides\nInstallation        ","tags":null,"title":"Installing R \u0026 RStudio","type":"docs"},{"authors":null,"categories":null,"content":"  Videos Slides   Videos  Intro to Tidyverse   Slides  View all slides in new window  Download PDF of all slides\nWelcome  Installation  Going Forward              ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"da5eaa72bd8244366a48bc670dab8428","permalink":"/lectures/10-lecture/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/lectures/10-lecture/","section":"lectures","summary":"  Videos Slides   Videos  Intro to Tidyverse   Slides  View all slides in new window  Download PDF of all slides\nWelcome  Installation  Going Forward              ","tags":null,"title":"Welcome to the Tidyverse","type":"docs"},{"authors":null,"categories":null,"content":"  Videos Slides   Videos  DplyR Functions   Slides  View all slides in new window  Download PDF of all slides\nRecap  Syntax  Filter  Select  Mutate  Summarize  Group By  Extras                             ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"98138fd98002b0cf91d10663fed1f846","permalink":"/lectures/11-lecture/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/lectures/11-lecture/","section":"lectures","summary":"  Videos Slides   Videos  DplyR Functions   Slides  View all slides in new window  Download PDF of all slides\nRecap  Syntax  Filter  Select  Mutate  Summarize  Group By  Extras                             ","tags":null,"title":"Dplyr Functions","type":"docs"},{"authors":null,"categories":null,"content":"  Videos Slides   Videos  TidyR   Slides  View all slides in new window  Download PDF of all slides\nRecap  Long vs.¬†Wide  Pivot Wider  Pivot Longer  Separate  Unite  Missing Data                          ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"8ba09e9ce19ba996e838c124562c7b8b","permalink":"/lectures/12-lecture/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/lectures/12-lecture/","section":"lectures","summary":"  Videos Slides   Videos  TidyR   Slides  View all slides in new window  Download PDF of all slides\nRecap  Long vs.¬†Wide  Pivot Wider  Pivot Longer  Separate  Unite  Missing Data                          ","tags":null,"title":"Tidyr Functions","type":"docs"},{"authors":null,"categories":null,"content":"  Videos Slides   Videos  Intro to RMarkdown   Slides  View all slides in new window  Download PDF of all slides\nCrisis  Check These!  Going Forward              ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"65a79fb834a6030966c962f10a1a0cfe","permalink":"/lectures/13-lecture/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/lectures/13-lecture/","section":"lectures","summary":"Videos Slides   Videos  Intro to RMarkdown   Slides  View all slides in new window  Download PDF of all slides\nCrisis  Check These!","tags":null,"title":"The Reproducibility Crisis","type":"docs"},{"authors":null,"categories":null,"content":"  Videos Slides   Videos  Anatomy of RMarkdown   Slides  View all slides in new window  Download PDF of all slides\nRecap  Doc Info  Headers  Bold/Italics  Hyperlinks  Lists  Code                          ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"d981d5fbaa7130f253126410bcd1a940","permalink":"/lectures/14-lecture/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/lectures/14-lecture/","section":"lectures","summary":"  Videos Slides   Videos  Anatomy of RMarkdown   Slides  View all slides in new window  Download PDF of all slides\nRecap  Doc Info  Headers  Bold/Italics  Hyperlinks  Lists  Code                          ","tags":null,"title":"RMarkdown Basics","type":"docs"},{"authors":null,"categories":null,"content":"  Videos Slides   Videos  Flexibility of RMarkdown   Slides  View all slides in new window  Download PDF of all slides\nRecap  Parameters  Other Pretty Things              ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"ef78ed4eca62fae3ecafcf73d7c6ff43","permalink":"/lectures/15-lecture/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/lectures/15-lecture/","section":"lectures","summary":"  Videos Slides   Videos  Flexibility of RMarkdown   Slides  View all slides in new window  Download PDF of all slides\nRecap  Parameters  Other Pretty Things              ","tags":null,"title":"RMarkdown Flexibility","type":"docs"},{"authors":null,"categories":null,"content":"  Videos Slides   Videos  Intro to Data Visualization   Slides  View all slides in new window  Download PDF of all slides\nRecap  Aesthetics  Labels  Factors                 ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"524484e8446f76f34ffc4c9c39822517","permalink":"/lectures/16-lecture/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/lectures/16-lecture/","section":"lectures","summary":"  Videos Slides   Videos  Intro to Data Visualization   Slides  View all slides in new window  Download PDF of all slides\nRecap  Aesthetics  Labels  Factors                 ","tags":null,"title":"Intro to Data Visualization","type":"docs"},{"authors":null,"categories":null,"content":"  Videos Slides   Videos  Customizing Your Plots   Slides  View all slides in new window  Download PDF of all slides\nRecap  Color Palettes  Themes  Shapes/Colors/Fills  Legend  Scale  Axis Labels                          ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"a5f971a01d743f91a003275f519d89bf","permalink":"/lectures/17-lecture/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/lectures/17-lecture/","section":"lectures","summary":"  Videos Slides   Videos  Customizing Your Plots   Slides  View all slides in new window  Download PDF of all slides\nRecap  Color Palettes  Themes  Shapes/Colors/Fills  Legend  Scale  Axis Labels                          ","tags":null,"title":"Customize Your Plots","type":"docs"},{"authors":null,"categories":null,"content":"  Videos Slides   Videos  MultiPanel Plots \u0026amp; Adding Things   Slides  View all slides in new window  Download PDF of all slides\nRecap  Faceting  Arranging  Adding Stuff                 ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"120ca404664b7835344b0c70adb51a83","permalink":"/lectures/18-lecture/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/lectures/18-lecture/","section":"lectures","summary":"  Videos Slides   Videos  MultiPanel Plots \u0026amp; Adding Things   Slides  View all slides in new window  Download PDF of all slides\nRecap  Faceting  Arranging  Adding Stuff                 ","tags":null,"title":"Multipanel Figures \u0026 Adding To Your Plot","type":"docs"},{"authors":null,"categories":null,"content":"  Videos Slides   Videos  Layers on Layers on Layers   Slides  View all slides in new window  Download PDF of all slides\nRecap  Bar Plots  Jittering  Multiple Geoms  Miscellaneous                    ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"140739646d63911d62f9a7ade969947e","permalink":"/lectures/19-lecture/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/lectures/19-lecture/","section":"lectures","summary":"  Videos Slides   Videos  Layers on Layers on Layers   Slides  View all slides in new window  Download PDF of all slides\nRecap  Bar Plots  Jittering  Multiple Geoms  Miscellaneous                    ","tags":null,"title":"Layers on Layers on Layers","type":"docs"},{"authors":null,"categories":null,"content":"  Videos Slides   Videos  Getting Oriented with RStudio   Slides  View all slides in new window  Download PDF of all slides\nAbout R  RStudio Tour           ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"0a52e4364496bbe163651eebaf21ac15","permalink":"/lectures/01-lecture/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/lectures/01-lecture/","section":"lectures","summary":"  Videos Slides   Videos  Getting Oriented with RStudio   Slides  View all slides in new window  Download PDF of all slides\nAbout R  RStudio Tour           ","tags":null,"title":"RStudio","type":"docs"},{"authors":null,"categories":null,"content":"  Videos Slides   Videos  Objects Part 1   Slides  View all slides in new window  Download PDF of all slides\nObjects  Assignment  Vectors  Object Classes                 ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"988c2d0bd3c68393a5651547ce7285fb","permalink":"/lectures/02-lecture/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/lectures/02-lecture/","section":"lectures","summary":"  Videos Slides   Videos  Objects Part 1   Slides  View all slides in new window  Download PDF of all slides\nObjects  Assignment  Vectors  Object Classes                 ","tags":null,"title":"Objects","type":"docs"},{"authors":null,"categories":null,"content":"  Videos Slides   Videos  Indexing   Slides  View all slides in new window  Download PDF of all slides\nRecap  Index  Indexing for Vectors  Importance                 ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"32b4b01d31f57e8de256f15e5dca25cf","permalink":"/lectures/03-lecture/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/lectures/03-lecture/","section":"lectures","summary":"  Videos Slides   Videos  Indexing   Slides  View all slides in new window  Download PDF of all slides\nRecap  Index  Indexing for Vectors  Importance                 ","tags":null,"title":"Indexing","type":"docs"},{"authors":null,"categories":null,"content":"  Videos Slides   Videos  Objects \u0026amp; Indexing Part 2   Slides  View all slides in new window  Download PDF of all slides\nRecap  Data.frame  Indexing DF  Finding Data  Matrices  Tibbles  Lists                          ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"91bd316812af600ed06f1968a7a64ba3","permalink":"/lectures/04-lecture/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/lectures/04-lecture/","section":"lectures","summary":"Videos Slides   Videos  Objects \u0026amp; Indexing Part 2   Slides  View all slides in new window  Download PDF of all slides\nRecap  Data.","tags":null,"title":"Objects Part 2","type":"docs"},{"authors":null,"categories":null,"content":"  Videos Slides   Videos  Functions \u0026amp; Help   Slides  View all slides in new window  Download PDF of all slides\nRecap  Operators  Logical Operators  Functions  Help Pages                    ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"34e7bb33dbca4c0c4993b268af9eb0be","permalink":"/lectures/05-lecture/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/lectures/05-lecture/","section":"lectures","summary":"  Videos Slides   Videos  Functions \u0026amp; Help   Slides  View all slides in new window  Download PDF of all slides\nRecap  Operators  Logical Operators  Functions  Help Pages                    ","tags":null,"title":"Acting On Variables","type":"docs"},{"authors":null,"categories":null,"content":"  Videos Slides   Videos  Packages   Slides  View all slides in new window  Download PDF of all slides\nRecap  Packages           ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"e026dc4268197a4cc31c1b406fe70ae1","permalink":"/lectures/06-lecture/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/lectures/06-lecture/","section":"lectures","summary":"  Videos Slides   Videos  Packages   Slides  View all slides in new window  Download PDF of all slides\nRecap  Packages           ","tags":null,"title":"Packages","type":"docs"},{"authors":null,"categories":null,"content":"  Videos Slides   Videos  Loading Files   Slides  View all slides in new window  Download PDF of all slides\nRecap  Directories  RProject  File Types  Loading Data                    ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"37a9d70805493d9128c0daf08c84ca46","permalink":"/lectures/07-lecture/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/lectures/07-lecture/","section":"lectures","summary":"  Videos Slides   Videos  Loading Files   Slides  View all slides in new window  Download PDF of all slides\nRecap  Directories  RProject  File Types  Loading Data                    ","tags":null,"title":"Loading Files","type":"docs"},{"authors":null,"categories":null,"content":"  Videos Data Slides   Videos  Review \u0026amp; Random   Data For the embedded exercises, please use the midus.csv dataset.  midus.csv\n Slides  View all slides in new window  Download PDF of all slides\nRecap  MIDUS  Exercise 1  Indexing  Logical Operators  Subsetting  Nesting  Exercise 2  Tidbits  Answers                                   ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"21be0af9d3e62847cb2250b589869441","permalink":"/lectures/08-lecture/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/lectures/08-lecture/","section":"lectures","summary":"Videos Data Slides   Videos  Review \u0026amp; Random   Data For the embedded exercises, please use the midus.csv dataset.  midus.csv\n Slides  View all slides in new window  Download PDF of all slides","tags":null,"title":"Review \u0026 Random","type":"docs"},{"authors":null,"categories":null,"content":"  Videos Slides   Videos  Stats \u0026amp; Plots   Slides  View all slides in new window  Download PDF of all slides\nRecap  Plotting  t-tests  Correlation  ANOVA  Regression  Resources                          ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"a8edce8c6c6cec6370fe4f9fe02c68fc","permalink":"/lectures/09-lecture/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/lectures/09-lecture/","section":"lectures","summary":"  Videos Slides   Videos  Stats \u0026amp; Plots   Slides  View all slides in new window  Download PDF of all slides\nRecap  Plotting  t-tests  Correlation  ANOVA  Regression  Resources                          ","tags":null,"title":"Basic Statistics \u0026 Plotting","type":"docs"},{"authors":null,"categories":null,"content":" Here‚Äôs your roadmap for the first 5 weeks of this course!\nEach topic has 2 primary sections.\n Lectures (): This contains the lecture slides and video recordings of these lectures. You should watch the videos and follow along for each topic that is assigned per week. Practice (): This page contains an interactive lesson that reinforces the principles that were discussed in the corresponding lecture. They also tend to go through more detail. Go through these after watching the lecture videos.  After you have watched the lectures and completed the practices for the week‚Äôs assigned topics, you will complete an assignment.\n Assignment (): This page contains the instructions for each assignment. All items in the green to-do list boxes are part of the assignment. Assignments are due by 9:00am on the day they‚Äôre listed.  tl;dr: You should follow this general process each day:\n Do everything on the Lectures () page Work through the practice set () page Complete the assignment ()      Module 1: Introduction \u0026amp; Basics Lecture Practice Assignment Quiz   9/15 2:30pm \u0026mdash;CHECK-IN 1\u0026mdash;           Week 1 Installation          Week 1 Tour of RStudio          Week 1 Objects        Week 1 Indexing        Week 1 Objects Part 2        Week 1 Functions \u0026amp; Help         Module 2: Continuation of Basics Lecture Practice Assignment Quiz   Week 2 Packages        Week 2 Loading Files        Week 2 Review and Random        Week 2 Statistics and Intro to Plotting         Module 3: Data Wrangling Lecture Practice Assignment Quiz   9/29 2:30pm \u0026mdash;CHECK-IN 2\u0026mdash;           Week 3 Introduction to Tidyverse        Week 3 Using Dplyr        Week 3 Using Tidyr         Module 4: Reproducibility Lecture Practice Assignment Quiz   Week 4 Introduction to RMarkdown        Week 4 Markdown Anatomy        Week 4 Endless Flexibility         Module 5: Data Visualization Lecture Practice Assignment Quiz   10/13 2:30pm \u0026mdash;CHECK-IN 3\u0026mdash;           Week 5 Introduction to Data Visualization        Week 5 Customizing Your Plots        Week 5 Multipanel Figures        Week 5 Layers on Layers on Layers         Module 6: Statistics Lecture Practice Assignment Quiz   Week 6 Distributions          Week 7 Comparing Means           Week 8 Regression            Module 7: Advanced Topics Lecture Practice Assignment Quiz   11/10 2:30pm \u0026mdash;CHECK-IN 4\u0026mdash;           Week 9 Data Viz Theory I           Week 10 Data Viz Theory II           11/24 2:30pm \u0026mdash;CHECK-IN 5\u0026mdash;           Week 11 Check-in + Thanksgiving Break           Week 12 Bootstrapping \u0026amp; For Loops           Week 13 Writing Functions           12/15 2:30pm \u0026mdash;CHECK-IN 6\u0026mdash;           Week 14 Simulations? TBD           1/4 - 1/10 Final Project            ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"3e223d7ba58b0122b42458e4cf52e04c","permalink":"/schedule/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/schedule/","section":"","summary":"Here‚Äôs your roadmap for the first 5 weeks of this course!\nEach topic has 2 primary sections.\n Lectures (): This contains the lecture slides and video recordings of these lectures.","tags":null,"title":"Schedule","type":"page"},{"authors":null,"categories":null,"content":" What is this class? Applied Statistical Analysis with R (Psych 4175)\n Who am I? My name is Shelly (she/her), and I‚Äôm the instructor. You can reach me via the contact form on the homepage of this site, or you can email me at shelly.cooper@wustl.edu.\n What will you learn in this class? By the end of the class, you will have learned:\n The fundamentals of programming with R statistical software. This includes objects, data classes, functions, data wrangling, plotting/graphing, and making reproducible reports The fundamentals of basic statistics including distributions, correlations, t-tests, ANOVAs, and linear regression A theoretical foundation for the principles of data visualization A knowledge base in which to expand your statistical horizons by using more sophisticated code, such as bootstrapping and writing your own functions (make your code work for you!)   What‚Äôs the course philosophy? Programming \u0026amp; statistics are increasingly becoming a demanding skill across a wide variety of fields, including psychology, neuroscience, and other related disciplines. The goal of this course is for you to leave understanding core fundamentals of applied programming and statistics. Although we will use R software, the core concepts should carry with you to other programming languages (Python, MATLAB etc.).\n The only difference between a beginner and expert programmer, is that the expert is better at Googling‚Äù.\n My goal is to get you to the point where you can effectively Google R-related questions and mostly understand the results.\n How is this course organized? There will be 3 units:\nGetting you up to speed with coding in R. This will include weekly homework assignments and you will review one of your peers‚Äô code each week. Recap of statistics learned in Psych 300 (Intro to Psych Stats). However, the material will focus on the application of these tests in R, accessing their results, and incorporating them into academic manuscripts. This will include some more advanced, nuanced topics such as theoretical understanding of the principles in data visualization, using for loops and conditional statements to perform simulations, and writing your own R functions that can be as general or specific as you‚Äôd like.   What do you need for this course? You‚Äôll need 3 things:\nYou need R and it‚Äôs buddy RStudio. The first lecture video will show you how to install these. You need this website ‚Äì most of the content will take place on this website. You need access to our class Canvas page. This is where your you‚Äôll submit your assignments, complete your quizzes, and complete your code reviews.   How do I get a good grade? There are no exams! Hooray! To get a good grade in this class, you simply need to do the following:\n Homework Assignments will be posted on the course website, and are all frontloaded in Unit 1 at the beginning of the class. This is to make sure that you get lots of practice as you‚Äôre learning the basics of R.  If you want to use one of your own datasets for these, please let me know ahead of time so we can make sure it has certain characteristics that work with the assignments. Otherwise, I‚Äôll post a dataset to Canvas that you can use. Each assignment is worth 8 points and there will be 5 of them for a total of 40 points Each day an assignment is late, I will remove 2 points unless you contact me and we discuss other arrangements I will not grade code on exactness or perfection. However, I do expect an answer for every questions. Points will be taken aware if a question is skipped or not thoroughly answered. I will not take off points for incorrect code, as long as it‚Äôs clear you have tried your best to figure it out.  Peer Reviews After each homework assignment, you will be randomly assigned to a peer in your class, and you will review the code from each other‚Äôs homework assignment. You will fill out several discussion prompts on Canvas about your peer‚Äôs code. The goal is for you to gain experience in reading other peoples‚Äô code and for you to obtain consistent feedback from someone other than the instructor.  Each peer review assignment will be worth 4 points and there will be 5 of them for a total of 20 points possible. Points will be taken away if the prompts are not completely answered. For example, if I ask for 2 good things about your peers‚Äô code, and you only provide 1 example, points will be taken away from your code review assignment.  Quizzes There will be 4 Canvas quizzes spanning Unit 2 and into the beginning of Unit 3.  You are permitted to use your notes and the internet, but you must NOT discuss with your peers. Each quiz will be worth 5 points for a total of 20 points.  Final Assignment You will complete a final take-home project due during finals week (if you want to turn it in before then, that‚Äôs OK!). This project will be completely R-based, and will incorporate skills learned over the semester with extra emphasis on those learned in Unit 3.  If you would like to use your own dataset for this, you must tell me ahead of time and get it pre-approved! This project will be worth 20 points. To earn full marks on this project, your code must compile (meaning if I run the code, as is, it should work perfectly) and you must answer all portions of the assignment.   \\[ Homeworks (40pts) + Peer Reviews (20pts) + Quizzes (20pts) + Final Project (20pts) = 100 Total Points\\]\n COVID-19 \u0026amp; How to be OK (This section was created, albeit slightly modified, from this awesome tweet by Dr.¬†Chris Jones. And, you know, the state of the world.)\nIn case you hadn‚Äôt noticed, there is a global pandemic. None of us are really ‚ÄúOK‚Äù. If you tell me you‚Äôre having trouble, I‚Äôm not going to judge you or think less of you. I hope you‚Äôll extend me the same grace.\nLet‚Äôs set the stage:\n You never owe me personal information about your health (mental or physical), or anything else. Since this course is entirely online, we do not have to worry about the whole class physically distancing or needing to go into quarantine if one of us is exposed. You are always welcome to come talk to me about things that you‚Äôre going through, however. If I can‚Äôt help you, I usually know somebody who can. If you need extra help or you need more time with something, just ask. I‚Äôll work with you. Promise.  Online Etiquette We will be making use of discussion threads on Canvas. Students are expected to maintain a polite and respectful tone in their online discourse. Some things to consider:\n Any communication shared privately may become public, so be mindful of what you share in discussion boards or chats. This is especially true for sharing any personal and/or identifying information about you or someone else. Do not share any passwords or divulge any personal information (yours or others) that can be used in a malicious manner (phone numbers, addresses etc.). Humor doesn‚Äôt always translate in an online forum. If you want to make a joke or a sarcastic remark, be 100% sure that it is clear you are joking. Your comments must be readable to everyone, therefore I ask that you please refrain from using shortcuts. For example, please type out ‚Äúyou‚Äù instead of ‚Äúu‚Äù. Very common acronyms are OK (‚Äúlol‚Äù or ‚Äúhaha‚Äù). But please refrain from acronyms that are not as well-known (‚Äúfwiw‚Äù etc.). Treat your classmates and professor with kindness and respect. Any indication of online harassment or bullying will not be tolerated and will be reported. This is especially pertinent when giving constructive feedback in code reviews. Please avoid using ALL CAPS because it can be interpreted as yelling.   Academic Policies \u0026amp; Resources  University Code of Conduct  Any student found guilty of academic misconduct, such as cheating, plagiarizing, forgery, or furnishing false information to a University official will be subject to consequences including failing the class, suspension from the University, or expulsion from the University.  Special accommodations (such as a learning, sensory, or physical disability or any other diagnosis that requires special accommodations and/or assistance with lectures, reading, written assignments, and/or exam taking)  Contact Disability Resources at disabilityresources@wustl.edu or call 314-935-5970 Please contact me as soon as possible if you need special accommodations. Once I have the Accommodation Letter from Disability Resources, we can discuss ways to modify the course experience for you.  Mental \u0026amp; Physical Health:  Habif Health and Wellness Center, email HabifInfo@wustl.edu or call 314-935-6666  WUSTL Police Department  On campus emergency, please call 314-935-5555  Relationship or sexual violence, including sexual harassment and stalking  Contact a licensed RSVP counselor (confidential, with some limited information being shared as needed with the appropriate university administrator) at rsvpcenter@wustl.edu or call 314-935-3445 Contact the University‚Äôs Title IX Director, Ms.¬†Jessica Kennedy, at jwkennedy@wustl.edu or call 314-935-3118 PLEASE NOTE You can always come talk to me. Period. However, if you come to me with any issues surrounding child abuse, suicidal tendencies, or sexual assault, sexual discrimination, sexual harassment, dating violence, domestic violence or stalking, I am required to report these to their appropriate administrators. Washington University faculty and administrators strive to maintain confidentiality, but some information may need to be disclosed when it is a matter of safety.     ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"e4d5a4a79239f08c6ad0d7cbf1be756c","permalink":"/syllabus/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/syllabus/","section":"","summary":"What is this class? Applied Statistical Analysis with R (Psych 4175)\n Who am I? My name is Shelly (she/her), and I‚Äôm the instructor. You can reach me via the contact form on the homepage of this site, or you can email me at shelly.","tags":null,"title":"Syllabus","type":"page"}]